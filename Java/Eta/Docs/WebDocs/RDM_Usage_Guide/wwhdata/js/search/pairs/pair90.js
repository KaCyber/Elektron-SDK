function FileData_Pairs(x)
{
x.t("included","fieldlist");
x.t("housed","inside");
x.t("m.parentnode.insertbefore","window");
x.t("provide","dictionaries");
x.t("manner","change");
x.t("globally","scoped");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("situation","entry\u2019s");
x.t("required","encode");
x.t("16383","thomson");
x.t("16383","values");
x.t("once","again");
x.t("field","list");
x.t("field","dictionary");
x.t("solicited","unsolicited");
x.t("until","fieldid");
x.t("until","different");
x.t("provided","solicited");
x.t("provided","subsequent");
x.t("payload","match");
x.t("payload","information");
x.t("change","situation");
x.t("change","effect");
x.t("5.9","special");
x.t("inside","remaining");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("new","dictionaryid");
x.t("precedence","once");
x.t("document","script");
x.t("pageview","transport");
x.t("list","until");
x.t("list","reached");
x.t("list","matching");
x.t("indicates","temporary");
x.t("again","chapter");
x.t("api","java");
x.t("entry\u2019s","value");
x.t("entry","adopts");
x.t("adopts","temporarily");
x.t("decoded","int");
x.t("range","values");
x.t("dictionary","change");
x.t("dictionary","enumerated");
x.t("dictionary","domain");
x.t("dictionary","dictionaries");
x.t("dictionary","end");
x.t("dictionary","used");
x.t("enumerated","types");
x.t("changed","manner");
x.t("changed","dictionary");
x.t("changed","two");
x.t("window","document");
x.t("fieldlist","elementlist");
x.t("zero","value");
x.t("zero","encountered");
x.t("fieldid","zero");
x.t("encoded","decoded");
x.t("int","dictionaryid");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("stream","until");
x.t("temporarily","changed");
x.t("auto","send");
x.t("reuters","customers");
x.t("refresh","message");
x.t("refresh","takes");
x.t("refresh","fieldentry");
x.t("messages","stream");
x.t("domain","5.9");
x.t("containertype","housed");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("dictionaries","required");
x.t("dictionaries","selecting");
x.t("dictionaries","used");
x.t("scoped","range");
x.t("different","dictionaryid");
x.t("chapter","dictionary");
x.t("ways","dictionaryid");
x.t("transport","api");
x.t("match","dictionaries");
x.t("types","dictionary");
x.t("customers","provide");
x.t("end","field");
x.t("thomson","reuters");
x.t("message","dictionary");
x.t("java","edition");
x.t("e.g","field");
x.t("together","decode");
x.t("value","new");
x.t("value","indicates");
x.t("send","pageview");
x.t("selecting","dictionaryid");
x.t("(arguments)","[r]");
x.t("temporary","dictionary");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("decode","field");
x.t("decode","content");
x.t("encountered","containertype");
x.t("takes","precedence");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","dictionaryid");
x.t("semantics","function");
x.t("semantics","dictionaryid");
x.t("values","globally");
x.t("values","16383");
x.t("values","-16383");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("-16383","16383");
x.t("-16383","dictionaryid");
x.t("two","ways");
x.t("dictionaryid","included");
x.t("dictionaryid","provided");
x.t("dictionaryid","changed");
x.t("dictionaryid","encoded");
x.t("dictionaryid","refresh");
x.t("dictionaryid","values");
x.t("dictionaryid","-16383");
x.t("dictionaryid","dictionaryid");
x.t("dictionaryid","contained");
x.t("edition","special");
x.t("reached","dictionaryid");
x.t("special","semantics");
x.t(".q=i","[r]");
x.t("contained","payload");
x.t("used","together");
x.t("used","across");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("fieldentry","contains");
x.t("remaining","entry");
x.t("remaining","entries");
x.t("a.async=1","a.src=g");
x.t("unsolicited","refresh");
x.t("across","messages");
x.t("subsequent","solicited");
x.t("googleanalyticsobject","[r]");
x.t("effect","remaining");
x.t("elementlist","payload");
x.t("encode","decode");
x.t("entries","field");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("content","e.g");
x.t("matching","dictionaryid");
x.t("contains","fieldid");
}
