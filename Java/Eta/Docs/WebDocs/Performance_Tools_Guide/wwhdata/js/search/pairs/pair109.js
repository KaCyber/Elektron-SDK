function FileData_Pairs(x)
{
x.t("supports","data");
x.t("passed","underlying");
x.t("m.parentnode.insertbefore","window");
x.t("compression","applied");
x.t("compression","requires");
x.t("compression","copies");
x.t("compression","function");
x.t("compression","transport");
x.t("compression","drawbacks");
x.t("compression","algorithm");
x.t("compression","used");
x.t("compression","using");
x.t("compression","generally");
x.t("applied","chapter");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("vary","based");
x.t("type","compression");
x.t("best","practices");
x.t("a=s.createelement","(o)");
x.t("require","buffers");
x.t("new","date");
x.t("document","script");
x.t("pageview","transport");
x.t("api","supports");
x.t("api","java");
x.t("api\u2019s","buffer");
x.t("practices","11.2.9");
x.t("practices","11.2");
x.t("requires","additional");
x.t("-compressiontype","-compressionlevel");
x.t("compressing","data");
x.t("performance","best");
x.t("window","document");
x.t("copies","data");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("11.2.9","compression");
x.t("auto","send");
x.t("underlying","transport");
x.t("processing","compression");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("upajtransportperf","exposes");
x.t("different","buffer");
x.t("chapter","performance");
x.t("transport","compression");
x.t("transport","best");
x.t("transport","api");
x.t("transport","api\u2019s");
x.t("compressed","different");
x.t("reduces","amount");
x.t("enable","compression");
x.t("level","compression");
x.t("buffers","transport");
x.t("option","enable");
x.t("java","edition");
x.t("consider","compression");
x.t("amount","data");
x.t("additional","processing");
x.t("send","pageview");
x.t("drawbacks","consider");
x.t("11.2","transport");
x.t("(arguments)","[r]");
x.t("exposes","option");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("read","compression");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("output","data");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","passed");
x.t("data","compression");
x.t("data","compressed");
x.t("data","reduces");
x.t("data","user-provided");
x.t("overhead","vary");
x.t("result","compression");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("algorithm","output");
x.t("based","type");
x.t("edition","compression");
x.t(".q=i","[r]");
x.t("user-provided","buffer");
x.t("used","level");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","-compressiontype");
x.t("a.async=1","a.src=g");
x.t("googleanalyticsobject","[r]");
x.t("buffer","read");
x.t("buffer","result");
x.t("buffer","pool");
x.t("pool","upajtransportperf");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("generally","require");
x.t("generally","compressing");
x.t("-compressionlevel","overhead");
}
