function FileData_Pairs(x)
{
x.t("example","program");
x.t("example","code");
x.t("dacsexample.authlock","system.exit");
x.t("system.out.println","createlock");
x.t("system.out.println","locks");
x.t("equal","else");
x.t("equal","appendix");
x.t("equal","compare");
x.t("appendix","example");
x.t("m.parentnode.insertbefore","window");
x.t("(0)","public");
x.t("else","system.out.println");
x.t("else","system.err.println");
x.t("combined","lock");
x.t("method","jdacslock");
x.t("method","dacslock");
x.t("dacsoperations.or_operation","long");
x.t("authlock","jdacslock");
x.t("authlock","calculate");
x.t("dacsexample","new");
x.t(".l=1","new");
x.t("create","lock");
x.t("create","ua-55718642-4");
x.t("static","void");
x.t("system.exit","(0)");
x.t("calculatelocklength","failed");
x.t("calculatelocklength","success");
x.t("void","authlock");
x.t("void","main");
x.t("program","function");
x.t("program","following");
x.t("dacsreturncodes.no_error","system.out.println");
x.t("_dacsinterface.calculatelocklength","serviceid");
x.t("populate","combined");
x.t("populate","lock");
x.t("public","static");
x.t("public","void");
x.t("public","class");
x.t("a=s.createelement","(o)");
x.t("lock","create");
x.t("lock","api");
x.t("lock","assume");
x.t("lock","len");
x.t("lock","int");
x.t("lock","length");
x.t("lock","dacslock");
x.t("lock","data");
x.t("lock","object");
x.t("jdacslock.createlock","combinedlock.data");
x.t("jdacslock.createlock","calculated");
x.t("locklist","new");
x.t("locklist","[1]");
x.t("locklist","locklistlength");
x.t("locklist","[0]");
x.t("locklist","[2]");
x.t("new","lock");
x.t("new","bytebufferpool");
x.t("new","long");
x.t("new","authlockexample");
x.t("new","dacslock");
x.t("new","date");
x.t("lock5.data","equals");
x.t("document","script");
x.t("dacs","lock");
x.t("pageview","transport");
x.t("bytebufferpool","public");
x.t("bytebufferpool","_pool");
x.t("(len)","ret");
x.t("(len)","lock1.data");
x.t("5000","char");
x.t("createlock","failed");
x.t("createlock","success");
x.t("api","java");
x.t("api","package");
x.t("lock1","jdacslock.createlock");
x.t("lock1","locklist");
x.t("lock1","_error");
x.t("assume","lock2");
x.t("assume","buffer");
x.t("_dacsinterface.createlock","serviceid");
x.t("len","else");
x.t("len","_dacsinterface.calculatelocklength");
x.t("len","system.err.println");
x.t("len","_dacsinterface.calculatecombinelocklength");
x.t("lock2","locklist");
x.t("lock2","lock3");
x.t("lock3","length");
x.t("lock3","created");
x.t("locks","equal");
x.t("locks","data");
x.t("locks","using");
x.t("true","system.out.println");
x.t("operation","dacsoperations.or_operation");
x.t("operation","productentitylist");
x.t("[1]","lock2");
x.t("lock3.equals","(lock5)");
x.t("jdacslock","equals");
x.t("jdacslock","_dacsinterface");
x.t("jdacslock.createjdacslock","dacserror");
x.t("char","operation");
x.t("combinedlock.data","_pool.getbuffer");
x.t("combinelock","failed");
x.t("combinelock","success");
x.t("locklistlength","locklist");
x.t("locklistlength","_error");
x.t("window","document");
x.t("parameters","serviceid");
x.t("boolean","equals");
x.t("dacserror","_error");
x.t("jdacslock.createdacserror","bytebufferpool");
x.t("string","args");
x.t("int","len");
x.t("int","locklistlength");
x.t("int","serviceid");
x.t("int","ret");
x.t("int","productentitylistlength");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("input","parameters");
x.t("auto","send");
x.t("failed","_error.errorid");
x.t("calculate","lock");
x.t("calculate","length");
x.t("productentitylist","new");
x.t("productentitylist","int");
x.t("productentitylist","productentitylistlength");
x.t("_error.errorid","_error.text");
x.t("long","productentitylist");
x.t("long","[256]");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("java.nio.bytebuffer","public");
x.t("length","combined");
x.t("length","new");
x.t("length","len");
x.t("length","input");
x.t("length","bytebuffer");
x.t("serviceid","5000");
x.t("serviceid","operation");
x.t("lock3.data","lock5.data");
x.t("transport","api");
x.t("_pool.getbuffer","(len)");
x.t("code","created");
x.t("authlockexample","dacsexample.authlock");
x.t("authlockexample","dacsexample");
x.t("_error","len");
x.t("_error","jdacslock.createdacserror");
x.t("_error","ret");
x.t("java","edition");
x.t("null","populate");
x.t("dacslock","locklist");
x.t("dacslock","lock1");
x.t("dacslock","boolean");
x.t("dacslock","[100]");
x.t("dacslock","combinedlock");
x.t("com.thomsonreuters.upa.examples.authlock","import");
x.t("_pool","new");
x.t("main","string");
x.t("[256]","int");
x.t("send","pageview");
x.t("(arguments)","[r]");
x.t("import","java.nio.bytebuffer");
x.t("lockdata","_pool.getbuffer");
x.t("ret","dacsreturncodes.no_error");
x.t("ret","_dacsinterface.createlock");
x.t("ret","system.err.println");
x.t("ret","_dacsinterface.combinelock");
x.t("jdacslock.equals","lock3.data");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","lock1");
x.t("[0]","calculate");
x.t("[0]","a.async=1");
x.t("productentitylistlength","lock1");
x.t("productentitylistlength","_error");
x.t("productentitylistlength","productcodelist");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","int");
x.t("data","length");
x.t("data","using");
x.t("bytebuffer","lockdata");
x.t("bytebuffer","pool");
x.t("equals","true");
x.t("equals","lock3.equals");
x.t("equals","jdacslock.equals");
x.t("productcodelist","[0]");
x.t("args","authlockexample");
x.t("system.err.println","calculatelocklength");
x.t("system.err.println","createlock");
x.t("system.err.println","combinelock");
x.t("system.err.println","calculatecombinelocklength");
x.t("[100]","int");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("edition","example");
x.t("created","dacslock");
x.t("created","using");
x.t("package","com.thomsonreuters.upa.examples.authlock");
x.t("_error.text","create");
x.t("_error.text","populate");
x.t("_error.text","calculate");
x.t("_error.text","compare");
x.t(".q=i","[r]");
x.t("following","example");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","method");
x.t("using","dacs");
x.t("class","authlock");
x.t("calculated","lock");
x.t("lock1.data","(lockdata)");
x.t("[2]","lock3");
x.t("a.async=1","a.src=g");
x.t("_dacsinterface.combinelock","combinedlock");
x.t("compare","locks");
x.t("googleanalyticsobject","[r]");
x.t("(lockdata)","assume");
x.t("success","else");
x.t("success","length");
x.t("pool","bytebuffer");
x.t("buffer","null");
x.t("calculatecombinelocklength","failed");
x.t("calculatecombinelocklength","success");
x.t("combinedlock","jdacslock.createlock");
x.t("combinedlock","locklist");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("_dacsinterface","jdacslock.createjdacslock");
x.t("object","dacslock");
x.t("_dacsinterface.calculatecombinelocklength","locklist");
x.t("(lock5)","equals");
}
