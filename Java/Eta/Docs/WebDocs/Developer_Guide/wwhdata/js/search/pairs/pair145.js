function FileData_Pairs(x)
{
x.t("passed","channel.write");
x.t("decrease","latency");
x.t("m.parentnode.insertbefore","window");
x.t("method","invoked");
x.t("method","attempt");
x.t("compression","enabled");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","writeflags");
x.t("description","no_flags");
x.t("bypassing","internal");
x.t("currently","queued");
x.t("direct_socket_write","channel.write");
x.t("queued","write_seqnum");
x.t("queued","channel.flush");
x.t("queued","buffer");
x.t("flag","description");
x.t("flag","value");
x.t("enabled","flag");
x.t("9.9.2","writeflags");
x.t("writeflags","write");
x.t("writeflags","values");
x.t("transportbuffer","passed");
x.t("transportbuffer","directly");
x.t("write_retransmit","indicates");
x.t("connection","compression");
x.t("however","decrease");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("contents","transportbuffer");
x.t("low","data");
x.t("document","script");
x.t("pageview","transport");
x.t("indicates","writer");
x.t("indicates","message");
x.t("invoked","ensure");
x.t("proper","ordering");
x.t("outbound","data");
x.t("cpu","writing");
x.t("api","transport");
x.t("api","java");
x.t("applies","contents");
x.t("retransmitted","chapter");
x.t("directly","socket");
x.t("writing","low");
x.t("writing","cost");
x.t("writing","data");
x.t("queues","empty");
x.t("requires","user-supplied");
x.t("operation","bypassing");
x.t("operation","do_not_compress");
x.t("channel.write","method");
x.t("channel.write","operation");
x.t("channel.write","channel.flush");
x.t("channel.write","call");
x.t("codes","channel.write");
x.t("window","document");
x.t("useful","writing");
x.t("no_flags","modification");
x.t("indicate","data");
x.t("indicate","packet");
x.t("writer","wants");
x.t("modification","result");
x.t("modification","performed");
x.t("write","flag");
x.t("write","operation");
x.t("attempt","pass");
x.t("empty","useful");
x.t("write_seqnum","indicates");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("auto","send");
x.t("cost","however");
x.t("number","indicate");
x.t("number","message");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("chapter","transport");
x.t("detailed","view");
x.t("transport","api");
x.t("transport","queuing");
x.t("transport","package");
x.t("compressed","flag");
x.t("socket","write");
x.t("internal","queues");
x.t("internal","transport");
x.t("do_not_compress","connection");
x.t("ordering","outbound");
x.t("return","codes");
x.t("message","write_retransmit");
x.t("message","compressed");
x.t("message","retransmission");
x.t("previous","content");
x.t("java","edition");
x.t("ensure","proper");
x.t("latency","internal");
x.t("value","indicates");
x.t("value","applies");
x.t("send","pageview");
x.t("(arguments)","[r]");
x.t("rates","return");
x.t("view","9.9");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("9.9","writing");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("channel.flush","method");
x.t("channel.flush","indicate");
x.t("sequence","number");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","currently");
x.t("data","queued");
x.t("data","modification");
x.t("data","rates");
x.t("data","buffer");
x.t("result","higher");
x.t("values","table");
x.t("values","function");
x.t("retransmission","previous");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("queuing","information");
x.t("edition","writeflags");
x.t("call","direct_socket_write");
x.t("packet","retransmitted");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("wants","attach");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("a.async=1","a.src=g");
x.t("pass","contents");
x.t("googleanalyticsobject","[r]");
x.t("performed","channel.write");
x.t("attach","sequence");
x.t("buffer","queued");
x.t("buffer","9.9.2");
x.t("user-supplied","sequence");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("higher","cpu");
x.t("content","requires");
}
