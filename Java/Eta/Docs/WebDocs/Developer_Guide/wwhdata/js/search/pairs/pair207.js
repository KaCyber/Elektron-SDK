function FileData_Pairs(x)
{
x.t("complex","primitive");
x.t("passed","encoding");
x.t("precision","bits");
x.t("ieee","754");
x.t("nanosecond","values");
x.t("255","returned");
x.t("255","isprimitivetype");
x.t("m.parentnode.insertbefore","window");
x.t("integers","dates");
x.t("dates","array");
x.t("method","table");
x.t("method","description");
x.t("datatypes.unknown","valid");
x.t("combined","representation");
x.t("combined","hint");
x.t("utf8_string","buffer");
x.t("rmtes_string","buffer");
x.t("seven","trailing");
x.t("256","type");
x.t("iscontainertype","datatype");
x.t("defines","qos");
x.t("defines","time");
x.t("defines","date");
x.t("day","year");
x.t("buffer.encode","buffer.decode");
x.t("enforce","validate");
x.t("full","range");
x.t("within","definition");
x.t("within","transport");
x.t("within","null");
x.t("look-up","required");
x.t("state.decode","enum");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","table");
x.t("table","provides");
x.t("table","transport");
x.t("table","contained");
x.t("table","returns");
x.t("table","datatypes");
x.t("currently","present");
x.t("currently","represent");
x.t("refer","section");
x.t("set-defined","primitive");
x.t("description","base");
x.t("description","primitivetypesize");
x.t("description","following");
x.t("description","encode");
x.t("enum","enum");
x.t("enum","type");
x.t("enum","represents");
x.t("required","determine");
x.t("required","information");
x.t("float.encode","float.decode");
x.t("discussed","table");
x.t("double","double");
x.t("double","type");
x.t("double","eight-byte");
x.t("double","types");
x.t("user","number");
x.t("user","specifies");
x.t("user","send");
x.t("user","specify");
x.t("converting","decimal");
x.t("millisecond","microsecond");
x.t("qos","defines");
x.t("qos","qos");
x.t("qos","information");
x.t("container","type");
x.t("blank","value");
x.t("blank","data");
x.t("blank","values");
x.t("cleared","decoding");
x.t("field","list");
x.t("field","dictionary");
x.t("uint.encode","uint.decode");
x.t("enumtype.def","well-known");
x.t("fourteen","decimal");
x.t("support","full");
x.t("support","ranges");
x.t("interface","method");
x.t("interface","unknown");
x.t("interface","methods");
x.t("interface","decode");
x.t("year","values");
x.t("datetime.encode","datetime.decode");
x.t("conveyed","several");
x.t("conveyed","using");
x.t("state","state");
x.t("state","represents");
x.t("state","information");
x.t("provided","outside");
x.t("provided","length");
x.t("type","description");
x.t("type","currently");
x.t("type","refer");
x.t("type","discussed");
x.t("type","type");
x.t("type","unknown");
x.t("type","primitive");
x.t("type","list");
x.t("type","dictionary");
x.t("type","follows");
x.t("type","base");
x.t("type","allows");
x.t("type","array");
x.t("type","opaque");
x.t("type","represents");
x.t("type","cannot");
x.t("type","specific");
x.t("type","represent");
x.t("type","defined");
x.t("type","semantics");
x.t("type","done");
x.t("type","returns");
x.t("type","datatypes");
x.t("payload","similar");
x.t("times","enumeration");
x.t("time","defines");
x.t("time","time");
x.t("time","rate");
x.t("time","details");
x.t("time","hour");
x.t("time","contains");
x.t("utf8","string");
x.t("utf8","encoding");
x.t("rmtes","reuters");
x.t("rmtes","encoding");
x.t("datatypes.int_1","byte");
x.t("unknown","datatypes.unknown");
x.t("unknown","none");
x.t("date.decode","time");
x.t("rate","e.g");
x.t("multiple","message");
x.t("primitive","type");
x.t("primitive","types");
x.t("primitive","value");
x.t("primitive","values");
x.t("a=s.createelement","(o)");
x.t("text","encoding");
x.t("new","date");
x.t("encodings","base");
x.t("certain","set-defined");
x.t("details","set-defined");
x.t("details","type");
x.t("updates","entire");
x.t("document","script");
x.t("includes","constant");
x.t("enum.decode","array");
x.t("size","base");
x.t("pageview","transport");
x.t("indicates","type");
x.t("indicates","value");
x.t("list","type");
x.t("list","primitive");
x.t("standards","user\u2019s");
x.t("places","fractional");
x.t("65,535","bytes");
x.t("65,535","transport");
x.t("state.encode","state.decode");
x.t("add","remove");
x.t("api","enforce");
x.t("api","primitive");
x.t("api","handles");
x.t("api","java");
x.t("api","either");
x.t("api","encoding");
x.t("simple","primitive");
x.t("simple","base");
x.t("bits","uint.encode");
x.t("bits","along");
x.t("float","double");
x.t("float","type");
x.t("float","float");
x.t("float","four-byte");
x.t("validate","encoding");
x.t("remove","seven");
x.t("exceed","255");
x.t("false","iscontainertype");
x.t("false","tostring");
x.t("byte","fixed-length");
x.t("byte","buffer");
x.t("decoded","part");
x.t("requires","less");
x.t("via","field");
x.t("specified","user");
x.t("true","datatype");
x.t("range","values");
x.t("stored","displayed");
x.t("definition","details");
x.t("definition","encoded");
x.t("definition","e.g");
x.t("11.2.1","real.encode");
x.t("outside","transport");
x.t("outside","scope");
x.t("previously","stored");
x.t("previously","held");
x.t("dictionary","look-up");
x.t("dictionary","e.g");
x.t("follows","ieee");
x.t("11.2.2","date.encode");
x.t("minute","second");
x.t("base","set-defined");
x.t("base","primitive");
x.t("base","system");
x.t("fixed-length","encodings");
x.t("fixed-length","array");
x.t("fixed-length","encoding");
x.t("leveraged","within");
x.t("part","fieldlist");
x.t("part","data");
x.t("bytes","wire");
x.t("bytes","additional");
x.t("bytes","datatypes");
x.t("11.2.3","time.encode");
x.t("enumeration","type");
x.t("enumeration","dictionary");
x.t("enumeration","value");
x.t("handles","type");
x.t("window","document");
x.t("updating","information");
x.t("fieldlist","elementlist");
x.t("provides","brief");
x.t("methods","method");
x.t("methods","table");
x.t("methods","used");
x.t("none","indicates");
x.t("none","none");
x.t("none","int");
x.t("floating","point");
x.t("11.2.4","datetime.encode");
x.t("determine","type");
x.t("sign","positive");
x.t("optimized","rwf");
x.t("11.2.5","qos.encode");
x.t("decodeqos.decode","state");
x.t("ascii","string");
x.t("ascii","specification");
x.t("standard","string");
x.t("standard","contain");
x.t("encoded","size");
x.t("encoded","decoded");
x.t("encoded","length");
x.t("eight-byte","floating");
x.t("month","day");
x.t("date.encode","date.decode");
x.t("allows","user");
x.t("allows","length");
x.t("allows","value");
x.t("allows","users");
x.t("allows","content");
x.t("11.2.6","state.encode");
x.t("array","user");
x.t("array","type");
x.t("array","primitive");
x.t("array","updates");
x.t("array","array");
x.t("array","resent");
x.t("array","values");
x.t("array","carries");
x.t("array","buffer");
x.t("array","datatypes");
x.t("int","int");
x.t("int","signed");
x.t("wire","float");
x.t("entire","array");
x.t("11.2.7","information");
x.t("string","contain");
x.t("string","representation");
x.t("string","follow");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("uint","uint");
x.t("uint","unsigned");
x.t("second","millisecond");
x.t("stream","state");
x.t("11.2.8","buffer.encode");
x.t("contain","characters");
x.t("characters","valid");
x.t("datatype","represents");
x.t("auto","send");
x.t("present","previously");
x.t("functions","none");
x.t("time.decode","datetime");
x.t("enum.encode","enum.decode");
x.t("point","type");
x.t("raw","byte");
x.t("reuters","multilingual");
x.t("representation","details");
x.t("representation","date");
x.t("representation","decimal");
x.t("representation","datatypes");
x.t("members","date");
x.t("two-byte","value");
x.t("opaque","data");
x.t("allowed","primitive");
x.t("allowed","java");
x.t("headers","details");
x.t("decoding","required");
x.t("decoding","field");
x.t("decoding","type");
x.t("decoding","base");
x.t("decoding","functions");
x.t("decoding","several");
x.t("datetime","combined");
x.t("datetime","datetime");
x.t("terminated","provided");
x.t("number","bytes");
x.t("processing","done");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("microsecond","nanosecond");
x.t("length","65,535");
x.t("length","specified");
x.t("length","may");
x.t("length","accessing");
x.t("length","e.g");
x.t("maximum","encoded");
x.t("represents","container");
x.t("represents","type");
x.t("represents","utf8");
x.t("represents","rmtes");
x.t("represents","primitive");
x.t("represents","enumeration");
x.t("represents","ascii");
x.t("represents","raw");
x.t("represents","data");
x.t("define","type");
x.t("define","fixed-length");
x.t("codecreturncodes.blank_data","encode");
x.t("cannot","passed");
x.t("specifies","value");
x.t("hint","converting");
x.t("hint","values");
x.t("tick-by-tick","allows");
x.t("whether","variable");
x.t("may","exceed");
x.t("chapter","data");
x.t("detailed","description");
x.t("detailed","view");
x.t("accessing","content");
x.t("responsibility","details");
x.t("types","refer");
x.t("types","enum");
x.t("types","user");
x.t("types","support");
x.t("types","type");
x.t("types","primitive");
x.t("types","base");
x.t("types","leveraged");
x.t("types","function");
x.t("types","define");
x.t("types","detailed");
x.t("types","e.g");
x.t("types","represent");
x.t("types","except");
x.t("types","update");
x.t("transport","api");
x.t("held","values");
x.t("section","11.2.1");
x.t("section","11.2.2");
x.t("section","11.2.3");
x.t("section","11.2.4");
x.t("section","11.2.5");
x.t("section","11.2.6");
x.t("section","11.2.7");
x.t("section","11.2.8");
x.t("section","11.3.1");
x.t("section","11.3.2");
x.t("section","11.6");
x.t("section","11.2.7.2");
x.t("section","11.2.7.5");
x.t("rdmfielddictionary","dmm");
x.t("returned","maximum");
x.t("real.decode","date");
x.t("simply","passing");
x.t("scope","transport");
x.t("primitivetypesize","returns");
x.t("tostring","returns");
x.t("replaces","previously");
x.t("follow","utf8");
x.t("follow","rmtes");
x.t("isprimitivetype","datatype");
x.t("double.decode","real");
x.t("message","headers");
x.t("java","double");
x.t("java","float");
x.t("java","string");
x.t("java","edition");
x.t("e.g","enumtype.def");
x.t("e.g","datatypes.int_1");
x.t("e.g","array");
x.t("e.g","tick-by-tick");
x.t("e.g","rdmfielddictionary");
x.t("e.g","integer");
x.t("e.g","real");
x.t("e.g","contained");
x.t("variable","fixed-length");
x.t("displayed","primitive");
x.t("less","bytes");
x.t("time.encode","time.decode");
x.t("null","terminated");
x.t("multilingual","text");
x.t("zeros","fourteen");
x.t("brief","description");
x.t("value","precision");
x.t("value","255");
x.t("value","currently");
x.t("value","blank");
x.t("value","cleared");
x.t("value","interface");
x.t("value","times");
x.t("value","indicates");
x.t("value","bits");
x.t("value","array");
x.t("value","hint");
x.t("value","chapter");
x.t("value","typically");
x.t("value","cross-referenced");
x.t("value","ranging");
x.t("datatype.int","types");
x.t("int.decode","uint");
x.t("similar","information");
x.t("resent","details");
x.t("additional","encoding");
x.t("11.2","primitive");
x.t("send","qos");
x.t("send","state");
x.t("send","pageview");
x.t("constant","definition");
x.t("constant","values");
x.t("11.3.1","section");
x.t("several","primitive");
x.t("several","message");
x.t("signed","integer");
x.t("specific","encoding");
x.t("(arguments)","[r]");
x.t("11.3.2","values");
x.t("view","11.2");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("represent","blank");
x.t("represent","simple");
x.t("represent","range");
x.t("represent","value");
x.t("represent","unsigned");
x.t("decode","interface");
x.t("valid","within");
x.t("valid","ascii");
x.t("valid","decoding");
x.t("varying","length");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("along","interface");
x.t("along","bit");
x.t("four-byte","floating");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","integers");
x.t("information","refer");
x.t("information","conveyed");
x.t("information","primitive");
x.t("information","part");
x.t("information","allows");
x.t("information","data");
x.t("information","contained");
x.t("data","payload");
x.t("data","stream");
x.t("data","simply");
x.t("data","replaces");
x.t("data","package");
x.t("data","fieldentry");
x.t("data","timeliness");
x.t("data","buffer");
x.t("11.6","following");
x.t("dmm","definition");
x.t("bit","sign");
x.t("defined","unsigned");
x.t("semantics","associated");
x.t("values","primitive");
x.t("values","details");
x.t("values","add");
x.t("values","base");
x.t("values","allowed");
x.t("values","define");
x.t("values","contained");
x.t("values","127");
x.t("real.encode","real.decode");
x.t("buffer.decode","utf8_string");
x.t("buffer.decode","rmtes_string");
x.t("buffer.decode","type");
x.t("buffer.decode","ascii_string");
x.t("specification","float.encode");
x.t("specification","null");
x.t("specification","double.encode");
x.t("date","defines");
x.t("date","time");
x.t("date","a=s.createelement");
x.t("date","month");
x.t("date","date");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("integer","complex");
x.t("integer","type");
x.t("users","represent");
x.t("done","outside");
x.t("done","information");
x.t("positive","negative");
x.t("double.encode","double.decode");
x.t("fractional","representation");
x.t("fractional","value");
x.t("fractional","denominators");
x.t("typically","requires");
x.t("qos.encode","decodeqos.decode");
x.t("ascii_string","buffer");
x.t("edition","primitive");
x.t("incoming","data");
x.t("elemententry","refer");
x.t("elemententry","base");
x.t("float.decode","double");
x.t("real","time");
x.t("real","optimized");
x.t("real","real");
x.t("com.thomsonreuters.upa.rdm","package");
x.t("package","enum.encode");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("system","information");
x.t("contained","type");
x.t("contained","updating");
x.t("contained","com.thomsonreuters.upa.rdm");
x.t("contained","fieldentry");
x.t("following","table");
x.t("following","methods");
x.t("used","encoding");
x.t("except","array");
x.t("carries","whether");
x.t("either","via");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("fieldentry","elemententry");
x.t("127","set-defined");
x.t("class","along");
x.t("uint.decode","float");
x.t("hour","minute");
x.t("using","multiple");
x.t("cross-referenced","enumeration");
x.t("well-known","constant");
x.t("a.async=1","a.src=g");
x.t("returns","false");
x.t("returns","true");
x.t("returns","maximum");
x.t("returns","codecreturncodes.blank_data");
x.t("returns","java");
x.t("int.encode","int.decode");
x.t("rwf","representation");
x.t("decimal","places");
x.t("decimal","fractional");
x.t("datetime.decode","qos");
x.t("11.2.7.2","information");
x.t("googleanalyticsobject","[r]");
x.t("ranges","simple");
x.t("754","specification");
x.t("associated","data");
x.t("unsigned","two-byte");
x.t("unsigned","value");
x.t("unsigned","integer");
x.t("timeliness","e.g");
x.t("passing","length");
x.t("encode","blank");
x.t("encode","interface");
x.t("elementlist","certain");
x.t("11.2.7.5","buffer");
x.t("buffer","provided");
x.t("buffer","type");
x.t("buffer","represents");
x.t("buffer","value");
x.t("buffer","buffer");
x.t("ranging","combined");
x.t("ranging","type");
x.t("ranging","65,535");
x.t("trailing","zeros");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("update","atomically");
x.t("atomically","incoming");
x.t("datatypes","includes");
x.t("datatypes","methods");
x.t("datatypes","value");
x.t("datatypes","class");
x.t("datatypes","contains");
x.t("encoding","standards");
x.t("encoding","standard");
x.t("encoding","decoding");
x.t("encoding","processing");
x.t("encoding","datatype.int");
x.t("negative","int.encode");
x.t("contains","members");
x.t("contains","following");
x.t("specify","base");
x.t("content","transport");
x.t("content","varying");
x.t("user\u2019s","responsibility");
x.t("denominators","256");
}
