function FileData_Pairs(x)
{
x.t("passed","needed");
x.t("m.parentnode.insertbefore","window");
x.t("method","description");
x.t("method","expects");
x.t("method","either");
x.t("method","returns");
x.t("parameter","false");
x.t("parameter","true");
x.t("odedentries","returns");
x.t("decodeiterator","clear");
x.t("approximation","total");
x.t("every","entry");
x.t("within","series");
x.t("clear","clears");
x.t("clear","chapter");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","series");
x.t("description","flags");
x.t("refer","section");
x.t("describes","container");
x.t("init","components");
x.t("seriesflags.has_summary_data","flag");
x.t("seriesflags.has_summary_data","seriesflags.has_set_defs");
x.t("1,073,741,824","enc");
x.t("flag","encodedsummarydata");
x.t("flag","values");
x.t("flag","encodedsetdefs");
x.t("parts","refresh");
x.t("summary","data");
x.t("components","content");
x.t("container","type");
x.t("container","types");
x.t("currency","type");
x.t("refers","encoded");
x.t("pair","encoded");
x.t("last","previously");
x.t("roll","back");
x.t("type","summary");
x.t("type","container");
x.t("type","seriesentry");
x.t("payload","totalcounthint");
x.t("payload","length");
x.t("encodedsummarydata","transportbuffer");
x.t("encodedsummarydata","populated");
x.t("encodedsummarydata","encodedsetdefs");
x.t("populate","encodedsummarydata");
x.t("fragmentation","multi-part");
x.t("transportbuffer","specified");
x.t("transportbuffer","position");
x.t("key-value","pair");
x.t("checkhassetdefs","checkhassummarydata");
x.t("total","number");
x.t("multiple","parts");
x.t("multiple","series");
x.t("unknown","value");
x.t("a=s.createelement","(o)");
x.t("needed","complete");
x.t("needed","content");
x.t("back","encoding");
x.t("new","date");
x.t("contents","information");
x.t("contents","used");
x.t("contents","encode");
x.t("details","refer");
x.t("document","script");
x.t("spread","across");
x.t("encodecomplete","completes");
x.t("pageview","transport");
x.t("indicates","approximate");
x.t("indicates","presence");
x.t("encodedentries","buffer");
x.t("encodeiterator","used");
x.t("flags","indicates");
x.t("flags","sets");
x.t("complete","methods");
x.t("complete","encoding");
x.t("api","java");
x.t("check","whether");
x.t("applies","every");
x.t("entry","encoded");
x.t("pre-encoded","summary");
x.t("pre-encoded","populate");
x.t("pre-encoded","encodecomplete");
x.t("pre-encoded","local");
x.t("pre-encoded","encodeinit");
x.t("fails","boolean");
x.t("false","roll");
x.t("specified","decodeiterator");
x.t("specified","series");
x.t("oded","summarydata");
x.t("reserve","space");
x.t("true","finish");
x.t("range","1,073,741,824");
x.t("definition","encoded");
x.t("definition","data");
x.t("checkhastotalcounthint","containertype");
x.t("approximate","total");
x.t("approximate","encoded");
x.t("populated","summary");
x.t("populated","local");
x.t("populated","definitions");
x.t("populated","encoding");
x.t("previously","successful");
x.t("multi-part","message");
x.t("bytes","enc");
x.t("perform","init");
x.t("methods","method");
x.t("methods","table");
x.t("methods","check");
x.t("methods","reserve");
x.t("methods","function");
x.t("methods","specific");
x.t("methods","encoding");
x.t("window","document");
x.t("provides","approximation");
x.t("useful","determining");
x.t("summarydata","populated");
x.t("prior","summary");
x.t("prior","definition");
x.t("prior","calling");
x.t("prior","call");
x.t("boolean","success");
x.t("applyhastotalcounthint","following");
x.t("checkhassummarydata","checkhastotalcounthint");
x.t("encoded","summary");
x.t("encoded","key-value");
x.t("encoded","approximate");
x.t("encoded","local");
x.t("encoded","point");
x.t("encoded","length");
x.t("encoded","data");
x.t("encoded","call");
x.t("encoded","series");
x.t("allows","encoding");
x.t("sets","gets");
x.t("local","definition");
x.t("local","definitions");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("totalcounthint","indicates");
x.t("totalcounthint","provides");
x.t("totalcounthint","sets");
x.t("totalcounthint","values");
x.t("stream","typically");
x.t("odedsummarydata","sets");
x.t("auto","send");
x.t("present","definitions");
x.t("point","contents");
x.t("refresh","message");
x.t("13.1","totalcounthint");
x.t("11.3.4.1","series");
x.t("applyhassetdefs","applyhassummarydata");
x.t("allowed","length");
x.t("space","encoding");
x.t("first","summary");
x.t("presence","optional");
x.t("11.3.4.2","following");
x.t("containertype","specified");
x.t("containertype","sets");
x.t("containertype","datatypes");
x.t("number","entries");
x.t("32,767","bytes");
x.t("encodesetdefscomplete","encodesetdefscomplete");
x.t("encodesetdefscomplete","completes");
x.t("decoding","reuse");
x.t("decoding","series");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("determining","amount");
x.t("length","unknown");
x.t("length","32,767");
x.t("length","hint");
x.t("length","data");
x.t("length","contains");
x.t("maximum","allowed");
x.t("encodeinit","perform");
x.t("encodeinit","additional");
x.t("encodeinit","starts");
x.t("clears","object");
x.t("combination","bit");
x.t("whether","specific");
x.t("hint","values");
x.t("chapter","data");
x.t("begins","decoding");
x.t("detailed","view");
x.t("transport","api");
x.t("section","13.1");
x.t("section","11.3.4.2");
x.t("section","11.5");
x.t("section","11.6");
x.t("handling","refer");
x.t("match","containertype");
x.t("types","11.3.4");
x.t("expected","first");
x.t("expected","series.encodeinit");
x.t("expected","entries");
x.t("enc","odedentries");
x.t("enc","oded");
x.t("enc","odedsummarydata");
x.t("enc","odedsetdefs");
x.t("calling","encodeinit");
x.t("correspond","data");
x.t("seriesflags","checkhassetdefs");
x.t("seriesflags","applyhassetdefs");
x.t("completes","encoding");
x.t("expects","encodeiterator");
x.t("seriesentry","payload");
x.t("message","refers");
x.t("message","fragmentation");
x.t("message","populated");
x.t("message","handling");
x.t("message","information");
x.t("previous","series");
x.t("java","edition");
x.t("e.g","currency");
x.t("amount","resources");
x.t("convenient","methods");
x.t("value","passed");
x.t("value","describes");
x.t("allocate","caching");
x.t("additional","summary");
x.t("additional","work");
x.t("send","pageview");
x.t("specific","seriesflags");
x.t("applyhassummarydata","applyhastotalcounthint");
x.t("odedsetdefs","sets");
x.t("seriesflags.has_set_defs","flag");
x.t("seriesflags.has_set_defs","present");
x.t("(arguments)","[r]");
x.t("series.encodeinit","summary");
x.t("series.encodeinit","series.encodesetdefscomplete");
x.t("series.encodeinit","returns");
x.t("series.encodeinit","encoding");
x.t("encodesummarydatacomplete","completes");
x.t("view","11.3");
x.t("11.3","container");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("decode","contents");
x.t("decode","begins");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("four-byte","unsigned");
x.t("11.5","encoded");
x.t("11.5","local");
x.t("tip","decoding");
x.t("11.3.4","series");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("optional","series");
x.t("information","refer");
x.t("information","flag");
x.t("information","applies");
x.t("information","useful");
x.t("information","message");
x.t("data","seriesflags.has_summary_data");
x.t("data","details");
x.t("data","definition");
x.t("data","encoded");
x.t("data","maximum");
x.t("data","encodeinit");
x.t("data","match");
x.t("data","expected");
x.t("data","seriesflags.has_set_defs");
x.t("data","information");
x.t("data","data");
x.t("data","package");
x.t("data","contained");
x.t("data","definitions");
x.t("data","entries");
x.t("data","contains");
x.t("11.6","encoded");
x.t("11.6","encode");
x.t("non-pre-encoded","series");
x.t("bit","values");
x.t("values","method");
x.t("values","refer");
x.t("values","flags");
x.t("values","range");
x.t("displaying","expected");
x.t("successful","encoded");
x.t("reuse","tip");
x.t("reuse","series");
x.t("finish","encoding");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("integer","totalcounthint");
x.t("containers","spread");
x.t("typically","used");
x.t("work","needed");
x.t("non","pre-encoded");
x.t("edition","series");
x.t("call","encodesetdefscomplete");
x.t("call","encodesummarydatacomplete");
x.t("call","corresponding");
x.t("call","series.encodesetdefscomplete");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","convenient");
x.t("used","multiple");
x.t("used","pre-encoded");
x.t("used","previous");
x.t("used","series.encodeinit");
x.t("used","encode");
x.t("caching","displaying");
x.t("contained","within");
x.t("contained","message");
x.t("starts","encoding");
x.t("corresponding","complete");
x.t("either","encoded");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("series.encodesetdefscomplete","decode");
x.t("series.encodesetdefscomplete","returns");
x.t("using","clear");
x.t("series","method");
x.t("series","parts");
x.t("series","summary");
x.t("series","payload");
x.t("series","transportbuffer");
x.t("series","methods");
x.t("series","allows");
x.t("series","11.3.4.1");
x.t("series","enc");
x.t("series","e.g");
x.t("series","containers");
x.t("series","without");
x.t("series","entries");
x.t("series","content");
x.t("series","encoding");
x.t("a.async=1","a.src=g");
x.t("across","multiple");
x.t("across","series");
x.t("returns","method");
x.t("returns","summary");
x.t("returns","encodedentries");
x.t("pass","summary");
x.t("succeeds","boolean");
x.t("googleanalyticsobject","[r]");
x.t("associated","stream");
x.t("encodedsetdefs","transportbuffer");
x.t("encodedsetdefs","populated");
x.t("encodedsetdefs","prior");
x.t("definitions","details");
x.t("definitions","pre-encoded");
x.t("definitions","maximum");
x.t("definitions","expected");
x.t("definitions","correspond");
x.t("definitions","contained");
x.t("definitions","entries");
x.t("without","using");
x.t("unsigned","integer");
x.t("position","length");
x.t("success","parameter");
x.t("entries","method");
x.t("entries","totalcounthint");
x.t("entries","used");
x.t("entries","associated");
x.t("entries","sent");
x.t("entries","encoding");
x.t("sent","across");
x.t("encode","additional");
x.t("encode","decode");
x.t("encode","series");
x.t("buffer","position");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("gets","encodedsummarydata");
x.t("gets","containertype");
x.t("gets","combination");
x.t("gets","four-byte");
x.t("gets","encodedsetdefs");
x.t("content","summary");
x.t("content","pre-encoded");
x.t("content","prior");
x.t("content","encoded");
x.t("content","information");
x.t("datatypes","value");
x.t("resources","allocate");
x.t("contains","encoded");
x.t("contains","information");
x.t("encoding","summary");
x.t("encoding","last");
x.t("encoding","contents");
x.t("encoding","fails");
x.t("encoding","methods");
x.t("encoding","prior");
x.t("encoding","non-pre-encoded");
x.t("encoding","non");
x.t("encoding","series");
x.t("encoding","pass");
x.t("encoding","succeeds");
x.t("encoding","content");
x.t("encoding","encoding");
x.t("object","reuse");
}
