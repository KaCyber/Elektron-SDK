function FileData_Pairs(x)
{
x.t("acceptoptions","parameter");
x.t("destroying","connections");
x.t("enabling","shared");
x.t("m.parentnode.insertbefore","window");
x.t("manner","best");
x.t("parameter","transport.connect");
x.t("parameter","transport.initialize");
x.t("parameter","server.accept");
x.t("parameter","transport.bind");
x.t("method","once");
x.t("method","information");
x.t("method","global");
x.t("pushed","onto");
x.t("bindoptions","parameter");
x.t("provide","full");
x.t("introduce","ordering");
x.t("creation","destruction");
x.t("globally","shared");
x.t("protected","channel");
x.t("within","single");
x.t("needs","application");
x.t("full","thread");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("onto","pre-established");
x.t("refer","section");
x.t("table","describes");
x.t("table","locking");
x.t("describes","locking");
x.t("description","none");
x.t("preferable","global");
x.t("ensures","locking");
x.t("once","channel");
x.t("related","messages");
x.t("related","resources");
x.t("fits","application\u2019s");
x.t("controlled","per-server");
x.t("controlled","initargs.globallocking");
x.t("controlled","per");
x.t("synchronization","creating");
x.t("locking","provide");
x.t("locking","controlled");
x.t("locking","enabled");
x.t("locking","change");
x.t("locking","channel");
x.t("locking","chosen");
x.t("locking","managed");
x.t("locking","types");
x.t("locking","disabled");
x.t("locking","models");
x.t("locking","overhead");
x.t("locking","used");
x.t("locking","model");
x.t("locking","occur");
x.t("enabled","channel");
x.t("enabled","allows");
x.t("enabled","addition");
x.t("enabled","disabled");
x.t("reconnecting","connection");
x.t("handled","dedicated");
x.t("(boolean)","acceptoptions");
x.t("(boolean)","bindoptions");
x.t("(boolean)","connectoptions");
x.t("(boolean)","connectoptions.channelwritelocking");
x.t("(boolean)","initargs");
x.t("(boolean)","acceptoptions.channelwritelocking");
x.t("bindoptions.sharedpoollock","(boolean)");
x.t("best","fits");
x.t("change","pushed");
x.t("connection","channel");
x.t("connection","pools");
x.t("connection","shared");
x.t("connection","server");
x.t("multiple","thread");
x.t("multiple","connections");
x.t("multiple","threads");
x.t("single-threaded","applications");
x.t("a=s.createelement","(o)");
x.t("protect","server\u2019s");
x.t("protect","resources");
x.t("channel","creation");
x.t("channel","related");
x.t("channel","locking");
x.t("channel","handled");
x.t("channel","multiple");
x.t("channel","channel\u2019s");
x.t("channel","basis");
x.t("channel","thread");
x.t("channel","shared");
x.t("channel","global");
x.t("channel","using");
x.t("lock","preferable");
x.t("lock","model");
x.t("new","date");
x.t("offer","maximum");
x.t("single","connection");
x.t("single","thread");
x.t("acceptoptions.channelreadlocking","(boolean)");
x.t("access","additionally");
x.t("document","script");
x.t("choice","several");
x.t("designed","offer");
x.t("pageview","transport");
x.t("9.4.1.1","following");
x.t("api","java");
x.t("connectoptions","parameter");
x.t("per-server","basis");
x.t("recommended","write");
x.t("channels","connection");
x.t("via","bindoptions.sharedpoollock");
x.t("via","acceptoptions.channelreadlocking");
x.t("via","connectoptions.channelreadlocking");
x.t("requires","synchronization");
x.t("writing","globally");
x.t("writing","messages");
x.t("channel\u2019s","buffer");
x.t("transport.connect","method");
x.t("creating","destroying");
x.t("changed","without");
x.t("avoid","locking");
x.t("initializing","uninitializing");
x.t("window","document");
x.t("connectoptions.channelreadlocking","(boolean)");
x.t("none","locking");
x.t("useful","multi-threaded");
x.t("methods","protected");
x.t("9.2.3","transport");
x.t("basis","via");
x.t("allows","globally");
x.t("allows","channel");
x.t("allows","sharing");
x.t("allows","accessing");
x.t("allow","transport");
x.t("write","related");
x.t("write","channel");
x.t("accessed","transport");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("three","types");
x.t("chosen","cannot");
x.t("thread","locking");
x.t("thread","channel");
x.t("thread","access");
x.t("thread","requires");
x.t("thread","write");
x.t("thread","safe");
x.t("thread","safety");
x.t("addition","enabling");
x.t("sharing","shared");
x.t("auto","send");
x.t("uninitializing","transport");
x.t("uninitializing","reinitializing");
x.t("initargs.globallocking","(boolean)");
x.t("messages","multiple");
x.t("messages","global");
x.t("messages","across");
x.t("issues","recommended");
x.t("issues","associated");
x.t("destruction","occur");
x.t("managed","application");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("maximum","flexibility");
x.t("design","three");
x.t("share","pool");
x.t("cannot","changed");
x.t("different","thread");
x.t("different","threads");
x.t("may","may");
x.t("may","impact");
x.t("safe","model");
x.t("chapter","transport");
x.t("application\u2019s","design");
x.t("accessing","channel");
x.t("detailed","view");
x.t("transport","within");
x.t("transport","locking");
x.t("transport","api");
x.t("transport","methods");
x.t("transport","9.2.3");
x.t("transport","global");
x.t("transport","package");
x.t("transport","offers");
x.t("transport","used");
x.t("transport","behavior");
x.t("types","locking");
x.t("types","lock");
x.t("transport.initialize","method");
x.t("section","9.4.1.1");
x.t("reinitializing","transport");
x.t("ordering","related");
x.t("ordering","issues");
x.t("impact","ordering");
x.t("client","connections");
x.t("dedicated","thread");
x.t("disabled","channel");
x.t("disabled","allows");
x.t("disabled","depending");
x.t("disabled","shared");
x.t("pre-established","connections");
x.t("safety","setting");
x.t("pools","read");
x.t("buffers","chapter");
x.t("buffers","across");
x.t("9.2","initializing");
x.t("java","edition");
x.t("connectoptions.channelwritelocking","(boolean)");
x.t("closing","reconnecting");
x.t("closing","re-accepting");
x.t("send","pageview");
x.t("several","locking");
x.t("depending","needs");
x.t("(arguments)","[r]");
x.t("connections","channel");
x.t("connections","channels");
x.t("connections","three");
x.t("connections","client");
x.t("connections","global");
x.t("view","9.2");
x.t("models","table");
x.t("models","locking");
x.t("models","designed");
x.t("models","function");
x.t("models","transport");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("read","channel");
x.t("read","write");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("server.accept","method");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","refer");
x.t("information","received");
x.t("overhead","risk");
x.t("shared","within");
x.t("shared","locking");
x.t("shared","global");
x.t("shared","using");
x.t("shared","across");
x.t("shared","pool");
x.t("shared","buffer");
x.t("shared","resources");
x.t("result","ordering");
x.t("received","may");
x.t("application","read");
x.t("application","application");
x.t("application","global");
x.t("global","locking");
x.t("global","lock");
x.t("global","channel");
x.t("global","global");
x.t("risk","multiple");
x.t("unprotected","shared");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("re-accepting","connection");
x.t("note","writing");
x.t("server\u2019s","shared");
x.t("applications","avoid");
x.t("applications","utilize");
x.t("edition","transport");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("offers","choice");
x.t("used","manner");
x.t("used","single-threaded");
x.t("used","protect");
x.t("used","share");
x.t("initargs","parameter");
x.t("acceptoptions.channelwritelocking","(boolean)");
x.t("following","table");
x.t("model","description");
x.t("model","allows");
x.t("model","used");
x.t("multi-threaded","applications");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("additionally","useful");
x.t("using","different");
x.t("using","server");
x.t("setting","allows");
x.t("a.async=1","a.src=g");
x.t("across","multiple");
x.t("across","different");
x.t("across","connections");
x.t("across","threads");
x.t("per","channel");
x.t("googleanalyticsobject","[r]");
x.t("occur","transport");
x.t("occur","across");
x.t("without","uninitializing");
x.t("without","closing");
x.t("behavior","ensures");
x.t("transport.bind","method");
x.t("associated","information");
x.t("flexibility","allow");
x.t("buffer","pool");
x.t("pool","locking");
x.t("pool","buffers");
x.t("pool","shared");
x.t("pool","used");
x.t("utilize","transport");
x.t("reading","writing");
x.t("reading","across");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("resources","accessed");
x.t("resources","thread");
x.t("resources","shared");
x.t("resources","unprotected");
x.t("server","connections");
x.t("server","global");
x.t("threads","introduce");
x.t("threads","channel");
x.t("threads","result");
x.t("threads","note");
x.t("threads","reading");
}
