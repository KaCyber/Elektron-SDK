function FileData_Pairs(x)
{
x.t("included","action");
x.t("m.parentnode.insertbefore","window");
x.t("possible","multiple");
x.t("clear","indicates");
x.t("clear","insert");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","104");
x.t("vectorentryactions.clear_entry","apply");
x.t("positions","decremented");
x.t("positions","incremented");
x.t("deleting","index");
x.t("required","update");
x.t("action","clear");
x.t("action","delete");
x.t("action","entry");
x.t("action","occurs");
x.t("action","ignored");
x.t("action","meaning");
x.t("action","typically");
x.t("apply","sortable");
x.t("container","types");
x.t("provided","possible");
x.t("vectors","clear");
x.t("vectors","entry");
x.t("vectors","update");
x.t("payload","included");
x.t("initially","provided");
x.t("vector","consumer");
x.t("vector","11.3.5.5");
x.t("delete","applies");
x.t("delete","chapter");
x.t("multiple","actions");
x.t("a=s.createelement","(o)");
x.t("new","date");
x.t("contents","required");
x.t("contents","entry");
x.t("document","script");
x.t("pageview","transport");
x.t("indicates","consumer");
x.t("vectorentryactions.update_entry","apply");
x.t("actions","target");
x.t("actions","values");
x.t("vectorentryactions.set_entry","apply");
x.t("api","java");
x.t("entry","payload");
x.t("entry","initially");
x.t("entry","replaced");
x.t("entry","occurs");
x.t("entry","index");
x.t("entry","already");
x.t("entry","update");
x.t("remove","stored");
x.t("entry\u2019s","index");
x.t("applies","sortable");
x.t("stored","displayed");
x.t("previously","stored");
x.t("previously","received");
x.t("window","document");
x.t("replaced","newly-added");
x.t("prior","insert");
x.t("target","entry");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("sortable","vector");
x.t("sortable","non-sortable");
x.t("auto","send");
x.t("occurs","entry");
x.t("occurs","previously");
x.t("occurs","prior");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("newly-added","information");
x.t("chapter","data");
x.t("index","positions");
x.t("index","position");
x.t("ignored","vectorentryactions.update_entry");
x.t("decremented","e.g");
x.t("detailed","view");
x.t("transport","api");
x.t("changes","contents");
x.t("types","11.3.5");
x.t("forth","delete");
x.t("forth","entry");
x.t("consumer","entry");
x.t("consumer","remove");
x.t("consumer","insert");
x.t("consumer","update");
x.t("java","edition");
x.t("e.g","deleting");
x.t("e.g","inserting");
x.t("displayed","information");
x.t("displayed","data");
x.t("existing","position");
x.t("104","vectorentry");
x.t("send","pageview");
x.t("already","inserted");
x.t("incremented","e.g");
x.t("(arguments)","[r]");
x.t("view","11.3");
x.t("11.3","container");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","package");
x.t("data","associated");
x.t("information","contents");
x.t("information","vectorentryactions.set_entry");
x.t("information","associated");
x.t("inserted","changes");
x.t("becomes","forth");
x.t("becomes","existing");
x.t("becomes","position");
x.t("11.3.5","vector");
x.t("meaning","indicates");
x.t("received","data");
x.t("values","table");
x.t("values","action");
x.t("values","function");
x.t("vectorentryactions","values");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("typically","occurs");
x.t("inserting","index");
x.t("edition","vectorentryactions");
x.t("order","index");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("vectorentry","actions");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("a.async=1","a.src=g");
x.t("googleanalyticsobject","[r]");
x.t("associated","entry");
x.t("associated","entry\u2019s");
x.t("non-sortable","vectors");
x.t("11.3.5.5","vectorentryactions");
x.t("position","vectorentryactions.clear_entry");
x.t("position","action");
x.t("position","existing");
x.t("position","becomes");
x.t("position","removed");
x.t("position","higher");
x.t("insert","action");
x.t("insert","applies");
x.t("insert","entry");
x.t("removed","position");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("update","action");
x.t("update","indicates");
x.t("update","previously");
x.t("higher","order");
}
