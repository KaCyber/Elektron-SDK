function FileData_Pairs(x)
{
x.t("example","shows");
x.t("example","writing");
x.t("example","writes");
x.t("example","function");
x.t("example","following");
x.t("passed","connection");
x.t("m.parentnode.insertbefore","window");
x.t("method","refer");
x.t("method","discussed");
x.t("method","again");
x.t("else","handle");
x.t("else","successful");
x.t("else","flush");
x.t("version","encodeiterator");
x.t("eta","release");
x.t("ask","500");
x.t("(enciter)","write");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("codecfactory.createencodeiterator","requestmsg");
x.t("refer","section");
x.t("writeargs.priority","(writepriorities.high)");
x.t("channel.getbuffer","channel.write");
x.t("channel.getbuffer","channel.releasebuffer");
x.t("keep","track");
x.t("required","continue");
x.t("queued","transport");
x.t("queued","flush");
x.t("channelstate.closed","system.out.printf");
x.t("likely","unrecoverable");
x.t("discussed","section");
x.t("shows","typical");
x.t("(writepriorities.high)","retcode");
x.t("chnl.state","channelstate.closed");
x.t("chnl.getbuffer","500");
x.t("state","determine");
x.t("enciter","codecfactory.createencodeiterator");
x.t("populate","write");
x.t("populate","message");
x.t("enciter.setbufferandrwfversion","buffer");
x.t("transportbuffer","buffer");
x.t("msg.encode","(enciter)");
x.t("fragmentation","process");
x.t("releasebuffer","checked");
x.t("9.9.6","channel.getbuffer");
x.t("connection","transportbuffer");
x.t("connection","closed");
x.t("connection","continue");
x.t("connection","break");
x.t("connection","upa");
x.t("a=s.createelement","(o)");
x.t("channel","channel.getbuffer");
x.t("channel","state");
x.t("stranded","output");
x.t("500","false");
x.t("500","byte");
x.t("unrecoverable","chnl.state");
x.t("unrecoverable","connection");
x.t("text","s\\n");
x.t("default","system.out.printf");
x.t("back","pool");
x.t("new","date");
x.t("chnl.minorversion","populate");
x.t("document","script");
x.t("(retcode)","case");
x.t("pageview","transport");
x.t("encodeiterator","enciter");
x.t("encodeiterator","enciter.clear");
x.t("9.10.2","call");
x.t("9.10.2","used");
x.t("appropriately","return");
x.t("again","exact");
x.t("again","break");
x.t("track","return");
x.t("flags","writeargs.priority");
x.t("error.text","connection");
x.t("error.text","buffer");
x.t("transportreturncodes.failure","system.out.printf");
x.t("api","java");
x.t("check","channel");
x.t("sure","keep");
x.t("false","error");
x.t("large","buffer");
x.t("byte","non-packable");
x.t("high","priority");
x.t("handle","return");
x.t("writing","data");
x.t("channel.write","example");
x.t("channel.write","channel.getbuffer");
x.t("channel.write","sure");
x.t("channel.write","code");
x.t("codes","appropriately");
x.t("closed","else");
x.t("closed","return");
x.t("transportfactory.createwriteargs","ask");
x.t("window","document");
x.t("continue","fragmentation");
x.t("continue","attempting");
x.t("continue","next");
x.t("determine","unrecoverable");
x.t("writes","buffer");
x.t("modification","flags");
x.t("chnl.write","buffer");
x.t("write","method");
x.t("write","again");
x.t("write","modification");
x.t("write","error");
x.t("write","data");
x.t("write","successful");
x.t("write","call");
x.t("write","buffer");
x.t("write","encode");
x.t("attempt","free");
x.t("attempt","flush");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("auto","send");
x.t("attempting","flush");
x.t("attempting","pass");
x.t("failed","eta");
x.t("unexpected","return");
x.t("error","connection");
x.t("error","text");
x.t("error","retcode");
x.t("error","null");
x.t("error","errno");
x.t("next","operations");
x.t("writeargs","transportfactory.createwriteargs");
x.t("writeargs","error");
x.t("writeargs","writeargs");
x.t("split","transport");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("transportreturncodes.success","write");
x.t("transportreturncodes.success","successful");
x.t("transportreturncodes.write_call_again","large");
x.t("transportreturncodes.init_not_initialized","case");
x.t("may","required");
x.t("non-packable","buffer");
x.t("enciter.clear","enciter.setbufferandrwfversion");
x.t("chapter","transport");
x.t("system.out.printf","unexpected");
x.t("system.out.printf","error");
x.t("detailed","view");
x.t("transport","api");
x.t("transport","output");
x.t("transport","flush");
x.t("transport","package");
x.t("returned","populate");
x.t("section","9.10.2");
x.t("section","12.2.9.1");
x.t("release","buffer");
x.t("retcode","likely");
x.t("retcode","msg.encode");
x.t("retcode","chnl.write");
x.t("retcode","transportreturncodes.success");
x.t("switch","(retcode)");
x.t("channel.releasebuffer","chapter");
x.t("code","example");
x.t("code","releasebuffer");
x.t("code","similar");
x.t("code","encountered");
x.t("client","server");
x.t("return","codes");
x.t("return","code");
x.t("return","failure");
x.t("return","values");
x.t("message","encode");
x.t("message","encoding");
x.t("buffers","back");
x.t("buffers","schedule");
x.t("exact","buffer");
x.t("transportreturncodes.write_flush_failed","write");
x.t("error.syserror","error.text");
x.t("java","edition");
x.t("chnl.releasebuffer","buffer");
x.t("null","encodeiterator");
x.t("null","buffer");
x.t("msg","(requestmsg)");
x.t("msg","buffer");
x.t("failure","else");
x.t("failure","break");
x.t("failure","conditions");
x.t("similar","client");
x.t("send","pageview");
x.t("free","buffers");
x.t("(arguments)","[r]");
x.t("codecfactory.createmsg","writeargs");
x.t("process","release");
x.t("view","9.9");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("encountered","write");
x.t("encountered","retcode");
x.t("9.9","writing");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("output","buffers");
x.t("output","buffer");
x.t("channel.flush","may");
x.t("schedule","call");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("typical","channel.getbuffer");
x.t("data","passed");
x.t("data","keep");
x.t("data","queued");
x.t("data","connection");
x.t("data","stranded");
x.t("data","using");
x.t("data","buffer");
x.t("chnl.majorversion","chnl.minorversion");
x.t("information","refer");
x.t("error.errorid","error.syserror");
x.t("values","write");
x.t("values","failure");
x.t("requestmsg","msg");
x.t("successful","write");
x.t("successful","attempt");
x.t("successful","data");
x.t("case","transportreturncodes.failure");
x.t("case","transportreturncodes.success");
x.t("case","transportreturncodes.write_call_again");
x.t("case","transportreturncodes.init_not_initialized");
x.t("case","transportreturncodes.write_flush_failed");
x.t("(requestmsg)","codecfactory.createmsg");
x.t("12.2.9.1","retcode");
x.t("s\\n","error.errorid");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("priority","write");
x.t("flush","method");
x.t("flush","refer");
x.t("flush","failed");
x.t("flush","data");
x.t("errno","encountered");
x.t("based","channel");
x.t("edition","channel.getbuffer");
x.t("call","write");
x.t("call","data");
x.t("call","flush");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","example");
x.t("used","continue");
x.t("used","attempt");
x.t("break","default");
x.t("break","case");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("using","channel.write");
x.t("a.async=1","a.src=g");
x.t("pass","data");
x.t("googleanalyticsobject","[r]");
x.t("operations","upa");
x.t("passing","write");
x.t("released","return");
x.t("buffer","else");
x.t("buffer","version");
x.t("buffer","chnl.getbuffer");
x.t("buffer","9.9.6");
x.t("buffer","check");
x.t("buffer","high");
x.t("buffer","continue");
x.t("buffer","write");
x.t("buffer","error");
x.t("buffer","writeargs");
x.t("buffer","split");
x.t("buffer","returned");
x.t("buffer","null");
x.t("buffer","channel.flush");
x.t("buffer","chnl.majorversion");
x.t("buffer","break");
x.t("buffer","passing");
x.t("buffer","released");
x.t("buffer","buffer");
x.t("encode","message");
x.t("encode","msg");
x.t("upa","release");
x.t("conditions","switch");
x.t("pool","code");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("server","based");
x.t("encoding","information");
x.t("checked","chnl.releasebuffer");
}
