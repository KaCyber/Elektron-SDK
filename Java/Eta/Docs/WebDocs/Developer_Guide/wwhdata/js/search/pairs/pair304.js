function FileData_Pairs(x)
{
x.t("example","field");
x.t("example","demonstrates");
x.t("example","function");
x.t("example","chapter");
x.t("example","following");
x.t("map.keyprimitivetype","(datatypes.uint)");
x.t("passed","retcode");
x.t("passed","order");
x.t("m.parentnode.insertbefore","window");
x.t("fieldsetdefentry","fieldsetdefentries");
x.t("fieldsetdefentry","[3]");
x.t("else","map");
x.t("method","retcode");
x.t("version","information");
x.t("ask","optimized");
x.t("def","assumes");
x.t("(enciter)","definition");
x.t("time.minute","(39)");
x.t(".l=1","new");
x.t("create","fieldsetdefdb");
x.t("create","ua-55718642-4");
x.t("create","entries");
x.t("set-defined","data");
x.t("set-defined","content");
x.t("init","encoding");
x.t("mapentry.encodeinit","enciter");
x.t("required","defs");
x.t("key","retcode");
x.t("(datatypes.time)","base");
x.t("(datatypes.real)","fieldsetdefentries");
x.t("(datatypes.real)","base");
x.t("field","list");
x.t("field","entry");
x.t("field","definition");
x.t("cleared","first");
x.t("mapentry.action","(mapentryactions.add)");
x.t("(datatypes.real_8rb)","fieldsetdefentries");
x.t("roll","back");
x.t("necessary","definitions");
x.t("time.second","(24)");
x.t(".datatype","(datatypes.real)");
x.t(".datatype","(datatypes.real_8rb)");
x.t(".datatype","(datatypes.time_3)");
x.t("populate","map");
x.t("populate","entries");
x.t("enciter","time");
x.t("enciter","fieldsetdefdb");
x.t("enciter","true");
x.t("enciter","uint");
x.t("enciter","codecreturncodes.success");
x.t("enciter","already");
x.t("enciter","real");
x.t("type","passed");
x.t("type","specified");
x.t("type","third");
x.t("type","second");
x.t("type","first");
x.t("realhints.exponent_2","encode");
x.t("time","fieldsetdefentries");
x.t("time","optimized");
x.t("time","encode");
x.t("(datatypes.time_3)","fieldsetdefentries");
x.t("(2)","fieldid");
x.t("realhints.exponent_4","encode");
x.t("a=s.createelement","(o)");
x.t("(22)","fieldid");
x.t("(22)","contains");
x.t("assumes","enciter");
x.t("back","success");
x.t("text","system.out.printf");
x.t("text","s\\n");
x.t("primitive","type");
x.t("new","fieldsetdefentry");
x.t("new","date");
x.t("fieldentry.encode","enciter");
x.t("document","script");
x.t("pageview","transport");
x.t("map.applyhassetdefs","map.containertype");
x.t("list","flags");
x.t("list","definition");
x.t("list","using");
x.t("fieldsetdefdb","field");
x.t("fieldsetdefdb","codecfactory.createlocalfieldsetdefdb");
x.t("fieldsetdefdb","localfieldsetdefdb");
x.t("map.containertype","(datatypes.field_list)");
x.t("error.text","else");
x.t("complete","map");
x.t("complete","retcode");
x.t("complete","fieldentry.fieldid");
x.t("complete","fieldentry.datatype");
x.t("complete","encoding");
x.t("map.encodesetdefscomplete","enciter");
x.t("flags","setid");
x.t("mapentry.encodecomplete","enciter");
x.t("api","encoder");
x.t("api","java");
x.t("entry","key");
x.t("entry","definition");
x.t("entry","encoded");
x.t("entry","retcode");
x.t("entry","matches");
x.t("entry","real.value");
x.t("entry","fieldentry.datatype");
x.t("entry","time.hour");
x.t("entry","encode");
x.t("entry","contains");
x.t("(18)","populate");
x.t("(18)","fieldid");
x.t("slot","corresponds");
x.t("map.encodeinit","enciter");
x.t("map.encodeinit","error");
x.t("fieldsetdefdb.definitions","[5]");
x.t(".count","(3)");
x.t("false","roll");
x.t("false","print");
x.t("227","realhints.exponent_2");
x.t(".entries","(fieldsetdefentries)");
x.t("true","begin");
x.t("true","retcode");
x.t("true","code");
x.t("specified","first");
x.t("definition","required");
x.t("definition","complete");
x.t("definition","slot");
x.t("definition","entry");
x.t("definition","definition");
x.t("definition","encoded");
x.t("definition","database");
x.t("definition","fieldentry.fieldid");
x.t("definition","made");
x.t("definition","above");
x.t("definition","definitions");
x.t("definition","entries");
x.t("definition","encode");
x.t("demonstrates","encoding");
x.t("fieldsetdefentries","new");
x.t("fieldsetdefentries","[1]");
x.t("fieldsetdefentries","[0]");
x.t("fieldsetdefentries","[2]");
x.t("codecfactory.createfieldsetdefentry","fieldsetdefentries");
x.t("[1]",".datatype");
x.t("[1]","codecfactory.createfieldsetdefentry");
x.t("[1]",".fieldid");
x.t("22801","realhints.exponent_4");
x.t("populated","structure");
x.t("populated","buffer");
x.t("corresponds","definition");
x.t("base","primitive");
x.t("(24)","encode");
x.t("window","document");
x.t("fieldlist.encodeinit","enciter");
x.t("completed","additional");
x.t("standard","data");
x.t("optimized","time");
x.t("optimized","real");
x.t("determine","success");
x.t("setid","defined");
x.t("verifies","correct");
x.t("fieldid","type");
x.t("fieldid","third");
x.t("fieldid","second");
x.t("fieldid","first");
x.t("fieldid","content");
x.t("map","init");
x.t("map","field");
x.t("map","complete");
x.t("map","entry");
x.t("map","contain");
x.t("map","portion");
x.t("encoded","create");
x.t("encoded","map");
x.t("encoded","fieldlist.applyhassetid");
x.t("encoded","next");
x.t("encoded","above");
x.t("arrays","fieldsetdefentry");
x.t("array","position");
x.t("string","value");
x.t("local","field");
x.t("local","definition");
x.t("third","field");
x.t("third","entry");
x.t("third","definition");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("three","field");
x.t("codecfactory.createlocalfieldsetdefdb","create");
x.t("contain","def");
x.t("uint","field");
x.t("uint","complete");
x.t("second","field");
x.t("second","entry");
x.t("second","definition");
x.t("auto","send");
x.t("begin","encoding");
x.t("store","return");
x.t("fieldlist.applyhassetid","fieldlist.applyhassetdata");
x.t("11.6.3.5","field");
x.t("error","text");
x.t("error","condition");
x.t("error","errno");
x.t("fieldlist.applyhassetdata","fieldlist.applyhasstandarddata");
x.t("[3]","contains");
x.t(".setid","(5)");
x.t("codecreturncodes.success","error");
x.t("next","encoding");
x.t("first","field");
x.t("first","entry");
x.t("first","definition");
x.t("first","standard");
x.t("first","fieldsetdefdb.clear");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("defs","populated");
x.t("fieldsetdefdb.clear","definition");
x.t("bid","real");
x.t("chapter","data");
x.t("system.out.printf","error");
x.t("detailed","view");
x.t("transport","api");
x.t("match","definition");
x.t("fieldlist.encodecomplete","enciter");
x.t("retcode","mapentry.encodeinit");
x.t("retcode","fieldentry.encode");
x.t("retcode","map.encodesetdefscomplete");
x.t("retcode","mapentry.encodecomplete");
x.t("retcode","map.encodeinit");
x.t("retcode","fieldlist.encodeinit");
x.t("retcode","fieldlist.encodecomplete");
x.t("retcode","fieldsetdefdb.encode");
x.t("retcode","map.encodecomplete");
x.t("switch","success");
x.t("code","example");
x.t("localfieldsetdefdb","fieldsetdefdb");
x.t("return","value");
x.t("expects","local");
x.t("encoder","verifies");
x.t("database","map");
x.t("database","encoded");
x.t("database","11.6.3.5");
x.t("database","call");
x.t("database","containing");
x.t("database","encoding");
x.t("database","contains");
x.t("[5]",".count");
x.t("[5]",".entries");
x.t("[5]",".setid");
x.t("message","return");
x.t("message","data");
x.t("error.syserror","error.text");
x.t("fieldentry.fieldid","(2)");
x.t("fieldentry.fieldid","(22)");
x.t("fieldentry.fieldid","(18)");
x.t("fieldentry.fieldid","(25)");
x.t("matches","fieldid");
x.t("(8)","time.minute");
x.t("(39)","time.second");
x.t("java","edition");
x.t("made","three");
x.t("real.value","227");
x.t("real.value","22801");
x.t("failure","map.applyhassetdefs");
x.t("fieldentry.datatype","(datatypes.time)");
x.t("fieldentry.datatype","(datatypes.real)");
x.t("fieldentry.datatype","(datatypes.uint)");
x.t("additional","standard");
x.t("value","text");
x.t("value","false");
x.t("value","determine");
x.t("value","string");
x.t("(mapentryactions.add)","uint.value");
x.t("send","pageview");
x.t("already","populated");
x.t("(arguments)","[r]");
x.t(".fieldid","(22)");
x.t(".fieldid","(18)");
x.t(".fieldid","(25)");
x.t("condition","switch");
x.t("uint.value","(100212)");
x.t("fieldlist.applyhasstandarddata","fieldlist.setid");
x.t("time.hour","(8)");
x.t("view","11.6");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]",".datatype");
x.t("[0]","codecfactory.createfieldsetdefentry");
x.t("[0]",".fieldid");
x.t("[0]","a.async=1");
x.t("trade","time");
x.t("(3)","fieldsetdefdb.definitions");
x.t("encountered","map.encodeinit");
x.t("script","//www.google-analytics.com/analytics.js");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("data","field");
x.t("data","complete");
x.t("data","entry");
x.t("data","standard");
x.t("data","encoded");
x.t("data","database");
x.t("data","message");
x.t("data","defined");
x.t("data","package");
x.t("data","11.6.3");
x.t("information","store");
x.t("correct","method");
x.t("correct","fieldid");
x.t("11.6","definitions");
x.t("error.errorid","error.syserror");
x.t("defined","transport");
x.t("defined","data");
x.t("successful","expects");
x.t("structure","cleared");
x.t("print","message");
x.t("s\\n","error.errorid");
x.t("above","mapentry.action");
x.t("above","encoding");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("errno","encountered");
x.t("(100212)","populate");
x.t("fieldlist.setid","(5)");
x.t("edition","field");
x.t("real","fieldsetdefentries");
x.t("real","encode");
x.t("call","correct");
x.t("order","match");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","example");
x.t("(datatypes.field_list)","map.keyprimitivetype");
x.t("fieldsetdefdb.encode","(enciter)");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("[2]",".datatype");
x.t("[2]","codecfactory.createfieldsetdefentry");
x.t("[2]",".fieldid");
x.t("(5)","field");
x.t("(5)","fieldsetdefdb.definitions");
x.t("(fieldsetdefentries)","begin");
x.t("(datatypes.uint)","base");
x.t("(datatypes.uint)","retcode");
x.t("using","definition");
x.t("containing","necessary");
x.t("a.async=1","a.src=g");
x.t("portion","encoding");
x.t("11.6.3","definition");
x.t("googleanalyticsobject","[r]");
x.t("(25)","fieldid");
x.t("(25)","contains");
x.t("definitions","passed");
x.t("definitions","set-defined");
x.t("definitions","array");
x.t("position","fieldsetdefdb.definitions");
x.t("success","false");
x.t("success","failure");
x.t("success","value");
x.t("entries","set-defined");
x.t("entries","definition");
x.t("entries","arrays");
x.t("entries","retcode");
x.t("buffer","version");
x.t("encode","standard");
x.t("encode","third");
x.t("encode","second");
x.t("encode","first");
x.t("encode","defined");
x.t("encoding","example");
x.t("encoding","field");
x.t("encoding","completed");
x.t("encoding","map");
x.t("encoding","local");
x.t("encoding","begin");
x.t("encoding","defined");
x.t("encoding","successful");
x.t("encoding","entries");
x.t("encoding","content");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("contains","ask");
x.t("contains","field");
x.t("contains","definition");
x.t("contains","bid");
x.t("contains","trade");
x.t("content","type");
x.t("content","retcode");
x.t("content","encoding");
x.t("map.encodecomplete","enciter");
}
