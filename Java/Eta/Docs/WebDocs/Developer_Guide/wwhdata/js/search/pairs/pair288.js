function FileData_Pairs(x)
{
x.t("example","demonstrates");
x.t("example","non-rwf");
x.t("example","function");
x.t("example","chapter");
x.t("example","note");
x.t("m.parentnode.insertbefore","window");
x.t("method","omitting");
x.t("else","series");
x.t("parameter","false");
x.t("parameter","true");
x.t("version","information");
x.t("ansi","datatype");
x.t("ansi","encoder");
x.t("ansi","page");
x.t("ansi","encode");
x.t("ansi","content");
x.t("shown","expected");
x.t(".put","encansibuffer.data");
x.t(".l=1","new");
x.t("create","empty");
x.t("create","ua-55718642-4");
x.t("init","encoding");
x.t("enum","series.containertype");
x.t("container","types");
x.t("container","using");
x.t("enciter.encodenonrwfinit","(nonrwfbuffer)");
x.t("roll","back");
x.t("change","value");
x.t("sample","demonstrates");
x.t("type","ansi");
x.t("type","enum");
x.t("type","using");
x.t("type","encoding");
x.t("populate","containertype");
x.t("enciter","codecreturncodes.success");
x.t("enciter","already");
x.t("enciter","success");
x.t("enciter","encode");
x.t("calls","encodeiterator.encodenonrwfinit");
x.t("external","ansi");
x.t("inside","using");
x.t("series.encodecomplete","enciter");
x.t("a=s.createelement","(o)");
x.t("(datatypes.ansi_page)","begin");
x.t("assumes","enciter");
x.t("back","success");
x.t("back","encoding");
x.t("text","system.out.printf");
x.t("text","s\\n");
x.t("new","date");
x.t("document","script");
x.t("encansibuffer","shown");
x.t("pageview","transport");
x.t("error.text","else");
x.t("complete","series");
x.t("api","java");
x.t("entry","nest");
x.t("exceed","nonrwfbuffer.length");
x.t("pre-encoded","ansi");
x.t("encodeiterator.encodenonrwfcomplete","following");
x.t("false","roll");
x.t("false","print");
x.t("nonrwfbuffer.length","copy");
x.t("directly","encode");
x.t("true","finalize");
x.t("demonstrates","error");
x.t("demonstrates","encode");
x.t("enciter.encodenonrwfcomplete","nonrwfbuffer");
x.t("buffer.data","calls");
x.t("enumerated","value");
x.t("populated","data");
x.t("populated","buffer");
x.t("window","document");
x.t("methods","encansibuffer");
x.t("methods","retcode");
x.t("methods","seriesentry");
x.t("methods","ensure");
x.t("methods","called");
x.t("prior","encodeinit");
x.t("determine","success");
x.t("series.containertype","(datatypes.ansi_page)");
x.t("non-rwf","container");
x.t("non-rwf","type");
x.t("non-rwf","encode");
x.t("non-rwf","encoding");
x.t("string","value");
x.t("empty","buffer");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("datatype","enumerated");
x.t("auto","send");
x.t("begin","series");
x.t("begin","encoding");
x.t("store","return");
x.t("error","text");
x.t("error","handling");
x.t("error","condition");
x.t("error","errno");
x.t("codecreturncodes.success","error");
x.t("containertype","ansi");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("seriesentry.encodecomplete","enciter");
x.t("encodeinit","retcode");
x.t("chapter","data");
x.t("system.out.printf","error");
x.t("nonrwfbuffer","codecfactory.createbuffer");
x.t("nonrwfbuffer","nonrwfbuffer.data");
x.t("nonrwfbuffer","success");
x.t("nonrwfbuffer","encode");
x.t("instead","copy");
x.t("detailed","view");
x.t("transport","api");
x.t("handling","initial");
x.t("handling","performed");
x.t("seriesentry.encodeinit","enciter");
x.t("(nonrwfbuffer)","encode");
x.t("types","11.3.7.2");
x.t("types","11.3.7");
x.t("encodeiterator.encodenonrwfinit","encodeiterator.encodenonrwfcomplete");
x.t("initial","encode");
x.t("retcode","enciter.encodenonrwfinit");
x.t("retcode","series.encodecomplete");
x.t("retcode","enciter.encodenonrwfcomplete");
x.t("retcode","seriesentry.encodecomplete");
x.t("retcode","seriesentry.encodeinit");
x.t("retcode","series.encodeinit");
x.t("switch","success");
x.t("nest","ansi");
x.t("expected","populated");
x.t("code","example");
x.t("return","value");
x.t("encoder","native");
x.t("message","return");
x.t("error.syserror","error.text");
x.t("seriesentry","seriesentry");
x.t("seriesentry","codecfactory.createseriesentry");
x.t("java","edition");
x.t("ensure","exceed");
x.t("11.3.7.2","non-rwf");
x.t("failure","retcode");
x.t("value","text");
x.t("value","false");
x.t("value","buffer.data");
x.t("value","determine");
x.t("value","non-rwf");
x.t("value","string");
x.t("additional","error");
x.t("codecfactory.createseriesentry","create");
x.t("send","pageview");
x.t("already","populated");
x.t("specific","encode");
x.t("(arguments)","[r]");
x.t("series.encodeinit","enciter");
x.t("series.encodeinit","error");
x.t("condition","switch");
x.t("native","ansi");
x.t("view","11.3");
x.t("11.3","container");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("encountered","series.encodeinit");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("page","example");
x.t("page","inside");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","populated");
x.t("information","store");
x.t("codecfactory.createbuffer","retcode");
x.t("data","external");
x.t("data","package");
x.t("error.errorid","error.syserror");
x.t("nested","container");
x.t("successful","begin");
x.t("nonrwfbuffer.data",".put");
x.t("11.3.7","non-rwf");
x.t("print","message");
x.t("s\\n","error.errorid");
x.t("called","instead");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("note","change");
x.t("errno","encountered");
x.t("copy","pre-encoded");
x.t("copy","nonrwfbuffer");
x.t("edition","non-rwf");
x.t("package","detailed");
x.t(".q=i","[r]");
x.t("following","sample");
x.t("contained","non-rwf");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("containing","non-rwf");
x.t("using","non-rwf");
x.t("using","specific");
x.t("finalize","encoding");
x.t("a.async=1","a.src=g");
x.t("series","init");
x.t("series","assumes");
x.t("series","entry");
x.t("series","containing");
x.t("series","encoding");
x.t("omitting","additional");
x.t("encansibuffer.data","retcode");
x.t("googleanalyticsobject","[r]");
x.t("performed","populate");
x.t("success","parameter");
x.t("success","complete");
x.t("success","false");
x.t("success","retcode");
x.t("success","code");
x.t("success","failure");
x.t("success","value");
x.t("encode","method");
x.t("encode","methods");
x.t("encode","nonrwfbuffer");
x.t("encode","nested");
x.t("encode","contained");
x.t("encode","series");
x.t("buffer","version");
x.t("buffer","nonrwfbuffer");
x.t("buffer","information");
x.t("encoding","example");
x.t("encoding","prior");
x.t("encoding","successful");
x.t("encoding","series");
x.t("encoding","success");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("content","directly");
}
