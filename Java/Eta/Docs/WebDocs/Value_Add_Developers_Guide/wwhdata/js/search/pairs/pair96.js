function FileData_Pairs(x)
{
x.t("6.5.2.1","obtaining");
x.t("cleanup","buffer");
x.t("passed","submit");
x.t("passed","reactorchannel.submit");
x.t("m.parentnode.insertbefore","window");
x.t("method","calls");
x.t("method","name");
x.t("method","section");
x.t("method","return");
x.t("method","call");
x.t("method","used");
x.t("available","user");
x.t("available","populate");
x.t("available","reactorchannel");
x.t("available","buffers");
x.t("available","reactor.connect");
x.t("available","buffer");
x.t("6.5.2.2","additional");
x.t("6.5.2.3","performance");
x.t("defines","return");
x.t("reactorerrorinfo","content");
x.t("packable","calling");
x.t("packable","buffer");
x.t("bufferusage","returns");
x.t("flushed","connection");
x.t(".l=1","new");
x.t("create","return");
x.t("create","ua-55718642-4");
x.t("table","defines");
x.t("table","table");
x.t("table","reactorchannel");
x.t("table","information");
x.t("table","reactorchannel.getbuffer");
x.t("description","valid");
x.t("description","getbuffer");
x.t("currently","reactorchannel");
x.t("required","packing");
x.t("required","obtain");
x.t("required","bytes");
x.t("ensures","required");
x.t("packing","section");
x.t("packing","application");
x.t("channel.getbuffer","method");
x.t("queued","pending");
x.t("queued","waiting");
x.t("user","reactorerrorinfo");
x.t("user","required");
x.t("user","populate");
x.t("user","transportbuffer.length");
x.t("user","written");
x.t("user","value");
x.t("configurable","reactorconnectoptions");
x.t("fragmented","submit");
x.t("populate","transportbuffer.data");
x.t("type","general");
x.t("transportbuffer","6.5.2.1");
x.t("transportbuffer","method");
x.t("transportbuffer","transport");
x.t("transportbuffer","returned");
x.t("transportbuffer","call");
x.t("releasebuffer","releases");
x.t("releasebuffer","submit");
x.t("calls","channel.getbuffer");
x.t("calls","channel.bufferusage");
x.t("calls","transport");
x.t("releases","buffer");
x.t("connection","reactor");
x.t("connection","reactorchannel.ioctl");
x.t("a=s.createelement","(o)");
x.t("back","correct");
x.t("back","pool");
x.t("new","date");
x.t("details","table");
x.t("details","typically");
x.t("guaranteedoutputbuffers","section");
x.t("document","script");
x.t("size","larger");
x.t("size","buffer");
x.t("includes","buffers");
x.t("transportbuffer.length","indicates");
x.t("pageview","transport");
x.t("proper","reuse");
x.t("indicates","type");
x.t("indicates","number");
x.t("indicates","underlying");
x.t("indicates","buffers");
x.t("6.5.2","writing");
x.t("api","reactor");
x.t("api","transport");
x.t("api","channel.releasebuffer");
x.t("api","java");
x.t("api","buffer");
x.t("guide","bufferusage");
x.t("guide","table");
x.t("guide","releasebuffer");
x.t("guide","buffer");
x.t("reactor.accept","options");
x.t("requested","size");
x.t("requested","populating");
x.t("network","requested");
x.t("permitted","request");
x.t("increase","number");
x.t("initialized","reactorerrorinfo");
x.t("fails","buffer");
x.t("false","method");
x.t("false","webworks_writedivopen");
x.t("false","following");
x.t("writing","function");
x.t("writing","information");
x.t("writing","data");
x.t("via","reactorchannel.getbuffer");
x.t("obtain","buffer");
x.t("name","description");
x.t("acquired","via");
x.t("reactorconnectoptions","reactoracceptoptions");
x.t("performance","purposes");
x.t("channel.bufferusage","method");
x.t("closed","null");
x.t("webworks_writedivopen","wwdd9001309");
x.t("webworks_writedivopen","wwdd9001288");
x.t("bytes","available");
x.t("bytes","written");
x.t("bytes","actually");
x.t("population","null");
x.t("window","document");
x.t("methods","webworks_writearrow");
x.t("methods","webworks_writedivclose");
x.t("provides","bytebuffer");
x.t("developers","guide");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("wwdd9001309","false");
x.t("auto","send");
x.t("webworksrootpath","wwdd9001309");
x.t("webworksrootpath","wwdd9001288");
x.t("request","buffer");
x.t("error","code");
x.t("keeping","required");
x.t("occurs","available");
x.t("options","reactorchannel");
x.t("number","guaranteedoutputbuffers");
x.t("number","bytes");
x.t("number","buffers");
x.t("reactorchannel","configurable");
x.t("reactorchannel","includes");
x.t("reactorchannel","closed");
x.t("reactorchannel","buffer");
x.t("written","network");
x.t("written","buffer");
x.t("underlying","transport");
x.t("6.5","writing");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("length","reflects");
x.t("length","member");
x.t("whether","buffer");
x.t("chapter","reactor");
x.t("reactor","method");
x.t("reactor","detailed");
x.t("reactor","return");
x.t("detailed","view");
x.t("transport","method");
x.t("transport","create");
x.t("transport","api");
x.t("transport","initialized");
x.t("internal","transport");
x.t("webworks_writearrow","webworksrootpath");
x.t("returned","user");
x.t("returned","error");
x.t("returned","length");
x.t("returned","correct");
x.t("returned","success");
x.t("returned","pool");
x.t("match","amount");
x.t("section","6.5.2.2");
x.t("section","6.5.2.3");
x.t("section","null");
x.t("calling","getbuffer");
x.t("channel.releasebuffer","method");
x.t("transportbuffer.data","provides");
x.t("transportbuffer.data","buffer");
x.t("book","keeping");
x.t("code","description");
x.t("code","failure");
x.t("code","no_buffers");
x.t("code","values");
x.t("code","init_not_initialized");
x.t("return","error");
x.t("return","code");
x.t("return","values");
x.t("return","buffer");
x.t("successfully","passed");
x.t("buffers","available");
x.t("buffers","currently");
x.t("buffers","queued");
x.t("buffers","made");
x.t("buffers","originate");
x.t("buffers","internally");
x.t("buffers","application");
x.t("pending","flushing");
x.t("java","developers");
x.t("java","edition");
x.t("ensure","proper");
x.t("wwdd9001288","false");
x.t("made","available");
x.t("populating","length");
x.t("webworks_writedivclose","chapter");
x.t("webworks_writedivclose","reactorchannel.getbuffer");
x.t("null","returned");
x.t("null","buffer");
x.t("occurred","reactorchannel");
x.t("amount","application");
x.t("flushing","connection");
x.t("failure","null");
x.t("failure","occurred");
x.t("additional","book");
x.t("value","indicates");
x.t("send","pageview");
x.t("originate","getbuffer");
x.t("holds","buffers");
x.t("obtaining","buffer");
x.t("(arguments)","[r]");
x.t("actually","used");
x.t("waiting","flushed");
x.t("view","6.5");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("valid","buffer");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("larger","maxfragmentsize");
x.t("purposes","application");
x.t("no_buffers","null");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","available");
x.t("information","packing");
x.t("information","submitted");
x.t("correct","pool");
x.t("internally","queued");
x.t("bytebuffer","population");
x.t("data","6.5.2");
x.t("data","using");
x.t("reuse","cleanup");
x.t("reactoracceptoptions","table");
x.t("reactor.connect","reactor.accept");
x.t("application","requested");
x.t("application","permitted");
x.t("application","holds");
x.t("application","specify");
x.t("reflects","number");
x.t("submit","transportbuffer");
x.t("successful","buffer");
x.t("values","webworks_writearrow");
x.t("values","webworks_writedivclose");
x.t("values","described");
x.t("values","occur");
x.t("case","transportbuffer");
x.t("submitted","user");
x.t("described","transport");
x.t("called","buffers");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("reactorchannel.ioctl","method");
x.t("typically","occurs");
x.t("edition","obtaining");
x.t("call","fails");
x.t("call","successful");
x.t(".q=i","[r]");
x.t("reactorchannel.getbuffer","user");
x.t("reactorchannel.getbuffer","return");
x.t("used","ensures");
x.t("used","increase");
x.t("used","submit");
x.t("used","reactorchannel.submit");
x.t("management","methods");
x.t("following","table");
x.t("init_not_initialized","indicates");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("getbuffer","successfully");
x.t("getbuffer","information");
x.t("getbuffer","obtains");
x.t("using","releasebuffer");
x.t("using","reactorchannel.getbuffer");
x.t("using","reactorchannel.submit");
x.t("general","failure");
x.t("a.async=1","a.src=g");
x.t("returns","number");
x.t("googleanalyticsobject","[r]");
x.t("obtains","buffer");
x.t("member","indicates");
x.t("occur","using");
x.t("released","back");
x.t("maxfragmentsize","transport");
x.t("maxfragmentsize","buffer");
x.t("success","case");
x.t("buffer","packable");
x.t("buffer","user");
x.t("buffer","fragmented");
x.t("buffer","back");
x.t("buffer","requested");
x.t("buffer","writing");
x.t("buffer","acquired");
x.t("buffer","internal");
x.t("buffer","match");
x.t("buffer","returned");
x.t("buffer","successfully");
x.t("buffer","larger");
x.t("buffer","used");
x.t("buffer","management");
x.t("buffer","released");
x.t("buffer","pool");
x.t("pool","transportbuffer");
x.t("pool","number");
x.t("pool","transport");
x.t("pool","ensure");
x.t("pool","described");
x.t("pool","called");
x.t("pool","using");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("reactorchannel.submit","transportbuffer");
x.t("specify","whether");
x.t("content","details");
}
