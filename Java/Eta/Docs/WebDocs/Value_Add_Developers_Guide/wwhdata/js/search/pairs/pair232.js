function FileData_Pairs(x)
{
x.t("directoryrefresh","directoryrefresh");
x.t("directoryrefresh","(directoryrefresh)");
x.t("example","chapter");
x.t("example","directory");
x.t("example","show");
x.t(".data","my_service");
x.t(".data","thomson");
x.t("msgbuf","channelmajorversion");
x.t("7.4.17.4","encoding");
x.t("m.parentnode.insertbefore","window");
x.t("method","shown");
x.t("below","create");
x.t("(domaintypes.market_price)","service.info");
x.t("version","buffer");
x.t("encodeiter.setbufferandrwfversion","msgbuf");
x.t("clear","directory");
x.t("clear","encode");
x.t("shown","below");
x.t("serviceflags.has_info","serviceflags.has_state");
x.t("rdm","source");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("create","service");
x.t("codecfactory.createencodeiterator","directoryrefresh");
x.t("directoryrefresh.applysolicited","state");
x.t("build","qos");
x.t("build","service");
x.t("(qosrates.tick_by_tick)","qos");
x.t(".servicestate","(1)");
x.t("source","directory");
x.t("required","object");
x.t("my_service","service.clear");
x.t("my_service","service.state");
x.t("my_service","vendor");
x.t("action","indicate");
x.t(".add","(domaintypes.market_price)");
x.t(".add","(service)");
x.t(".add","rwfenum");
x.t(".add","(domaintypes.market_by_order)");
x.t(".add","(qos2)");
x.t(".add","rwffld");
x.t(".add","(domaintypes.dictionary)");
x.t(".add","(qos1)");
x.t("qos","list");
x.t("qos","qos1");
x.t("qos","qos2");
x.t("directoryrefresh.clear","directory");
x.t("state","my_service");
x.t("state","directoryrefresh.state");
x.t("state","group");
x.t("state","filter");
x.t(".datastate","(datastates.ok)");
x.t("provided","service.info");
x.t("type","required");
x.t("service.clear","flags");
x.t(".streamstate","(streamstates.open)");
x.t("service.info",".capabilitieslist");
x.t("service.info",".flags");
x.t("service.info",".vendor");
x.t("service.info",".action");
x.t("service.info",".dictionariesusedlist");
x.t("service.info",".servicename");
x.t("service.info",".dictionariesprovidedlist");
x.t("service.info",".qoslist");
x.t("codecfactory.createqos","service.info");
x.t("codecfactory.createqos","qos1.timeliness");
x.t("a=s.createelement","(o)");
x.t("filters","supported");
x.t("new","date");
x.t("new","service");
x.t("(service)","clear");
x.t("document","script");
x.t("directoryrefresh.state",".datastate");
x.t("directoryrefresh.state",".streamstate");
x.t("directoryrefresh.state",".code");
x.t("pageview","transport");
x.t("encodeiterator","encodeiter");
x.t("info","state");
x.t("list","qos");
x.t("list","service.info");
x.t("list","services");
x.t(".capabilitieslist",".add");
x.t("rwfenum","build");
x.t("rwfenum","dictionaries");
x.t("service.state",".servicestate");
x.t("service.state",".flags");
x.t("service.state",".acceptingrequests");
x.t("flags","indicate");
x.t("flags","optional");
x.t("group","filters");
x.t("api","java");
x.t("(streamid)","flags");
x.t("filter","present");
x.t("filter","say");
x.t("iterator","rwf");
x.t("name","service.info");
x.t("(domaintypes.market_by_order)","dictionaries");
x.t("directory.servicefilterflags.state","directory.servicefilterflags.group");
x.t(".flags","(servicestateflags.has_accepting_reqs)");
x.t(".flags","serviceinfoflags.has_vendor");
x.t("window","document");
x.t("(directorymsgtype.refresh)","stream");
x.t("service.flags","serviceflags.has_info");
x.t(".vendor",".data");
x.t("generic","directory");
x.t("directory.servicefilterflags.info","directory.servicefilterflags.state");
x.t("indicate","info");
x.t("indicate","optional");
x.t("indicate","adding");
x.t("(qos2)","build");
x.t("(qos2)","qos2.timeliness");
x.t("(encodeiter)","code");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("stream","directoryrefresh.streamid");
x.t("qos2.timeliness","(qostimeliness.realtime)");
x.t("channelmajorversion","channelminorversion");
x.t("directoryrefresh.encode","(encodeiter)");
x.t("auto","send");
x.t("directorymsgfactory.createmsg","clear");
x.t("directorymsgfactory.createmsg","generic");
x.t("present","service.flags");
x.t("(servicestateflags.has_accepting_reqs)","service.state");
x.t("supported","directoryrefresh.filter");
x.t("directory.servicefilterflags.group","list");
x.t("reuters","capabilities");
x.t("qos1.rate","(qosrates.tick_by_tick)");
x.t("refresh","encodeiterator");
x.t("refresh","function");
x.t("refresh","object");
x.t("refresh","encoding");
x.t("members","directoryrefresh.applysolicited");
x.t("members","service.info");
x.t("qos1.timeliness","(qostimeliness.realtime)");
x.t("domain","models");
x.t("domain","7.4.17");
x.t("decoding","7.4.17.4");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("encodeiter","codecfactory.createencodeiterator");
x.t("dictionaries","provided");
x.t("dictionaries","used");
x.t("chapter","administration");
x.t(".action","(mapentryactions.add)");
x.t("detailed","view");
x.t("directory","refresh");
x.t("directory","domain");
x.t("directory","message");
x.t("directory","object");
x.t("directory","encoding");
x.t("transport","api");
x.t("(streamstates.open)","directoryrefresh.state");
x.t("rwffld","service.info");
x.t("(1)","service.state");
x.t("(1)","finish");
x.t("code","example");
x.t("serviceflags.has_state","action");
x.t("thomson","reuters");
x.t("message","type");
x.t("message","directoryrefresh.servicelist");
x.t("message","ret");
x.t(".dictionariesusedlist",".add");
x.t("java","edition");
x.t("directoryrefresh.rdmmsgtype","(directorymsgtype.refresh)");
x.t("(domaintypes.dictionary)","service.info");
x.t("(qosrates.jit_conflated)","qos");
x.t("additional","services");
x.t("(mapentryactions.add)","flags");
x.t("send","pageview");
x.t("(arguments)","[r]");
x.t("directoryrefresh.servicelist",".add");
x.t("ret","encodeiter.setbufferandrwfversion");
x.t("ret","directoryrefresh.encode");
x.t("view","7.4");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("directoryrefresh.filter","directory.servicefilterflags.info");
x.t("services","message");
x.t("services","used");
x.t("services","using");
x.t("models","detailed");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("(directoryrefresh)","directorymsgfactory.createmsg");
x.t("show","encoding");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("optional","members");
x.t("capabilities","list");
x.t("(qostimeliness.realtime)","qos1.rate");
x.t("(qostimeliness.realtime)","qos2.rate");
x.t("qos2.rate","(qosrates.jit_conflated)");
x.t(".servicename",".data");
x.t("qos1","codecfactory.createqos");
x.t(".code","(statecodes.none)");
x.t("serviceinfoflags.has_vendor","serviceinfoflags.has_dicts_provided");
x.t("qos2","codecfactory.createqos");
x.t("(qos1)","service.info");
x.t("finish","encode");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("has_dicts_used","serviceinfoflags.has_qos");
x.t("administration","domain");
x.t("(datastates.ok)","directoryrefresh.state");
x.t("edition","encoding");
x.t("created","directorymsgfactory.createmsg");
x.t(".acceptingrequests","(1)");
x.t("channelminorversion","encode");
x.t(".q=i","[r]");
x.t("say","info");
x.t("used","example");
x.t("used","service.info");
x.t("service","my_service");
x.t("service","state");
x.t("service","service.info");
x.t("service","name");
x.t("service","additional");
x.t("service","service");
x.t("service","codecfactory.createservice");
x.t(".dictionariesprovidedlist",".add");
x.t("7.4","rdm");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("(statecodes.none)","filter");
x.t("using","method");
x.t("serviceinfoflags.has_dicts_provided","serviceinfoflags");
x.t("vendor","name");
x.t("a.async=1","a.src=g");
x.t("directoryrefresh.streamid","(streamid)");
x.t("adding","new");
x.t("rwf","version");
x.t("encodeiter.clear","ret");
x.t("googleanalyticsobject","[r]");
x.t("codecfactory.createservice","build");
x.t(".qoslist",".add");
x.t("serviceinfoflags","has_dicts_used");
x.t("serviceinfoflags.has_qos","service");
x.t("encode","list");
x.t("encode","iterator");
x.t("encode","message");
x.t("buffer","encoding");
x.t("encoding","example");
x.t("encoding","source");
x.t("encoding","decoding");
x.t("encoding","service");
x.t("encoding","encodeiter.clear");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("object","directoryrefresh.clear");
x.t("object","directoryrefresh.rdmmsgtype");
x.t("object","created");
x.t("7.4.17","directory");
}
