function FileData_Pairs(x)
{
x.t("unregister","oldselectablechannel");
x.t("unregister","selectablechannel");
x.t("example","reactor");
x.t("example","webworks_writearrow");
x.t("example","webworks_writedivclose");
x.t("m.parentnode.insertbefore","window");
x.t("method","reactorchanneleventcallback");
x.t("method","name");
x.t("available","result");
x.t("provide","content");
x.t("reactorerrorinfo","contain");
x.t("role","object");
x.t("clear","clears");
x.t("needs","update");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("reactorchanneleventcallback","reactorchannelevent");
x.t("reactorchanneleventcallback","used");
x.t("reactorchanneleventcallback","class");
x.t("description","clear");
x.t("description","eventtype");
x.t("table","table");
x.t("table","reactorchannelevent");
x.t("table","reactorchanneleventtypes");
x.t("init","channel");
x.t("callback","example");
x.t("callback","method");
x.t("callback","reactorchanneleventcallback");
x.t("callback","methods");
x.t("callback","function");
x.t("related","issue");
x.t("mechanism","unregister");
x.t("mechanism","response");
x.t("key","event.reactorchannel");
x.t("flag","enumeration");
x.t("enabled","channel");
x.t("enabled","requests");
x.t("reactorchanneleventtypes.channel_up","register");
x.t("state","information");
x.t("interface","following");
x.t("dispatched","applicable");
x.t("necessary","initialization");
x.t("provided","role");
x.t("provided","login");
x.t("register","selector");
x.t("register","selectablechannel");
x.t("type","enumeration");
x.t("type","event");
x.t("change","occurred");
x.t("reactorchanneleventtypes.channel_down","close");
x.t("close","reactorchannel");
x.t("dispatching","data");
x.t("transportbuffer","unregister");
x.t("public","int");
x.t("response","event");
x.t("connection","related");
x.t("connection","state");
x.t("connection","recovery");
x.t("connection","failure");
x.t("channel_down","indicates");
x.t("channel","change");
x.t("channel","transportbuffer");
x.t("channel","according");
x.t("channel","changed");
x.t("channel","successfully");
x.t("channel","ready");
x.t("channel","event");
x.t("channel","event's");
x.t("channel","exchanged");
x.t("channel","created");
x.t("a=s.createelement","(o)");
x.t("reconnect","channel");
x.t("require","attention");
x.t("new","reactorchannel");
x.t("new","date");
x.t("document","script");
x.t("recovered","appropriate");
x.t("includes","exchange");
x.t("wwdd9000970","false");
x.t("pageview","transport");
x.t("invoked","return");
x.t("initialization","failure");
x.t("initialization","value");
x.t("initialization","process");
x.t("indicates","reactorchannel");
x.t("indicates","watchlist");
x.t("indicates","selectable");
x.t("able","consume");
x.t("oldselectablechannel","register");
x.t("found","reactorchannel");
x.t(".close","(errorinfo)");
x.t("senditemrequests","(reactorchannel)");
x.t("api","java");
x.t("initialized","directly");
x.t("channel_down_reconnecting","indicates");
x.t("according","values");
x.t("normally","application");
x.t("false","method");
x.t("false","flag");
x.t("false","public");
x.t("false","webworks_writedivopen");
x.t("false","reactorchannelevent");
x.t("via","reactorchanneleventcallback");
x.t("via","reactor.connect");
x.t("eventtype","type");
x.t("directly","dispatched");
x.t("specified","reactorconnectoptions");
x.t("specified","login");
x.t("reconnects","exiting");
x.t("event.eventtype","case");
x.t("name","description");
x.t("dictionary","messages");
x.t("dictionary","content");
x.t("reactorconnectoptions","reactor.connect");
x.t("changed","normally");
x.t("cancel","old");
x.t("reactorcallbackreturncodes.success","code");
x.t("webworks_writedivopen","wwdd9000970");
x.t("webworks_writedivopen","wwdd9000927");
x.t("webworks_writedivopen","wwdd9000962");
x.t("webworks_writedivopen","wwdd9000918");
x.t("enumeration","meaning");
x.t("enumeration","values");
x.t("(errorinfo)","break");
x.t("old","reactorchannel");
x.t("window","document");
x.t("methods","webworks_writearrow");
x.t("methods","webworks_writedivclose");
x.t("methods","6.4.6.1");
x.t("channel_up","indicates");
x.t("completed","necessary");
x.t("attempt","reconnect");
x.t("fd_change","indicates");
x.t("int","reactorchanneleventcallback");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("contain","detailed");
x.t("temporarily","unavailable");
x.t("auto","send");
x.t("webworksrootpath","wwdd9000970");
x.t("webworksrootpath","wwdd9000927");
x.t("webworksrootpath","wwdd9000962");
x.t("webworksrootpath","wwdd9000918");
x.t("wwdd9000927","false");
x.t("failed","reactorchannel");
x.t("begin","submitting");
x.t("request","messages");
x.t("selector","channel");
x.t("selector","selectionkey.op_read");
x.t(".oldselectablechannel",".keyfor");
x.t("reactorchannelevent","returned");
x.t("reactorchannelevent","event");
x.t("reactorchannelevent","utility");
x.t("reactorchannelevent","class");
x.t("reactorchannelevent","object");
x.t("members","webworks_writedivclose");
x.t("occurs","client");
x.t("reactorchanneleventtypes.channel_ready","channel");
x.t("messages","provided");
x.t("messages","exchanged");
x.t("messages","sent");
x.t("channeleventcallback","application");
x.t("select","notification");
x.t("select","notifiers");
x.t("select","selectionkey");
x.t("6.4","dispatching");
x.t("communicate","reactorchannel");
x.t("reactorchannel","available");
x.t("reactorchannel","table");
x.t("reactorchannel","connection");
x.t("reactorchannel","channel_down_reconnecting");
x.t("reactorchannel","temporarily");
x.t("reactorchannel","select");
x.t("reactorchannel","event.reactorchannel");
x.t("reactorchannel","successfully");
x.t("reactorchannel","application");
x.t("reactorchannel","experienced");
x.t("reactorchannel","warning");
x.t("initializes","channel_ready");
x.t("event.reactorchannel",".close");
x.t("event.reactorchannel",".oldselectablechannel");
x.t("event.reactorchannel",".selectablechannel");
x.t("event.reactorchannel","null");
x.t("event.reactorchannel","break");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("clears","reactorchannelevent");
x.t(".keyfor","(selector)");
x.t("(selector)","key.cancel");
x.t("recovery","event");
x.t("recovery","server");
x.t("exchange","provided");
x.t("may","require");
x.t(".selectablechannel",".register");
x.t("selectionkey.op_read","event.reactorchannel");
x.t("chapter","reactor");
x.t("reactor","callback");
x.t("reactor","channel_down");
x.t("reactor","channel");
x.t("reactor","attempt");
x.t("reactor","detailed");
x.t("detailed","view");
x.t("detailed","information");
x.t("requests","recovered");
x.t("transport","api");
x.t("webworks_writearrow","webworksrootpath");
x.t("returned","application");
x.t("directory","dictionary");
x.t("release","resources");
x.t("submitting","request");
x.t("switch","event.eventtype");
x.t("initial","messages");
x.t("client","connections");
x.t("notification","mechanism");
x.t("code","example");
x.t("return","reactorcallbackreturncodes.success");
x.t("return","reactorchannelevent");
x.t("successfully","initialized");
x.t("successfully","reconnects");
x.t("successfully","completed");
x.t("successfully","initializes");
x.t("login","directory");
x.t("issue","reactorerrorinfo");
x.t("ready","senditemrequests");
x.t("ready","dispatch");
x.t("channel_ready","indicates");
x.t("event","callback");
x.t("event","type");
x.t("event","invoked");
x.t("event","initialization");
x.t("event","cancel");
x.t("event","reactor");
x.t("event","webworks_writearrow");
x.t("event","switch");
x.t("event","occurred");
x.t("event","result");
x.t("event","application");
x.t("event","utility");
x.t("java","edition");
x.t("kind","connection");
x.t("occurred","table");
x.t("occurred","connection");
x.t("occurred","reactorchannel");
x.t("webworks_writedivclose","chapter");
x.t("webworks_writedivclose","reactor");
x.t("null","event.reactorchannel");
x.t("failure","may");
x.t("failure","ping");
x.t("dispatch","application");
x.t("wwdd9000962","false");
x.t("value","used");
x.t("send","pageview");
x.t("attention","application");
x.t("(arguments)","[r]");
x.t("connections","connection");
x.t("connections","watchlist");
x.t("watchlist","enabled");
x.t("process","applicable");
x.t("view","6.4");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("exiting","channeleventcallback");
x.t("valid","select");
x.t("selectable","channel");
x.t("reactorchanneleventtypes","enumeration");
x.t("event's","new");
x.t("event's","reactorchannel");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("applicable","includes");
x.t("applicable","specified");
x.t("reactorchanneleventtypes.fd_change","descriptor");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","event");
x.t("information","occurred");
x.t("information","application");
x.t("data","6.4.6");
x.t("6.4.6.1","reactor");
x.t("meaning","init");
x.t("exchanged","reactor");
x.t("exchanged","initial");
x.t("result","connection");
x.t("result","initialization");
x.t("timeout","kind");
x.t("appropriate","channel");
x.t("application","reactorerrorinfo");
x.t("application","needs");
x.t("application","interface");
x.t("application","able");
x.t("application","via");
x.t("application","channel_up");
x.t("application","begin");
x.t("application","returned");
x.t("application","release");
x.t("application","call");
x.t("application","using");
x.t("values","specified");
x.t("values","webworks_writearrow");
x.t("values","webworks_writedivclose");
x.t("unavailable","reactor");
x.t("reactor.connect","channel");
x.t("reactor.connect","called");
x.t("utility","methods");
x.t("case","reactorchanneleventtypes.channel_up");
x.t("case","reactorchanneleventtypes.channel_down");
x.t("case","reactorchanneleventtypes.channel_ready");
x.t("case","reactorchanneleventtypes.fd_change");
x.t("called","occurs");
x.t("key.cancel","register");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("(reactorchannel)","break");
x.t("notifiers","channel_opened");
x.t("channel_opened","indicates");
x.t(".register","selector");
x.t("selectionkey","key");
x.t("edition","reactor");
x.t("call","reactorchannel.close");
x.t("created","via");
x.t("experienced","event");
x.t(".q=i","[r]");
x.t("used","communicate");
x.t("used","application");
x.t("following","callback");
x.t("wwdd9000918","false");
x.t("reactorchannel.close","clean");
x.t("break","return");
x.t("break","case");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("containing","information");
x.t("class","members");
x.t("class","member");
x.t("using","select");
x.t("warning","indicates");
x.t("a.async=1","a.src=g");
x.t("googleanalyticsobject","[r]");
x.t("member","description");
x.t("associated","channel");
x.t("6.4.6","reactor");
x.t("selectablechannel","found");
x.t("selectablechannel","valid");
x.t("ping","timeout");
x.t("sent","channel");
x.t("consume","provide");
x.t("representing","channel");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("object","table");
x.t("object","ready");
x.t("object","containing");
x.t("clean","failed");
x.t("server","connections");
x.t("resources","associated");
x.t("content","fd_change");
x.t("content","application");
x.t("descriptor","representing");
x.t("update","notification");
}
