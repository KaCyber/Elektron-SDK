function FileData_Pairs(x)
{
x.t("passed","submit");
x.t("example","shows");
x.t("example","writing");
x.t("example","scenario");
x.t("example","webworks_writearrow");
x.t("6.5.2.2","writing");
x.t("m.parentnode.insertbefore","window");
x.t("method","method");
x.t("method","calls");
x.t("method","trigger");
x.t("method","name");
x.t("method","allows");
x.t("method","webworks_writearrow");
x.t("method","succeeded");
x.t("method","expects");
x.t("method","webworks_writedivclose");
x.t("method","additional");
x.t("method","manages");
x.t("method","described");
x.t("method","reactorsubmitoptions");
x.t("available","again");
x.t("available","transport");
x.t("available","consumer");
x.t("available","pool");
x.t("provide","additional");
x.t("msgbuffer","errorinfo");
x.t("msgbuffer","reactorchannel.majorversion");
x.t("msgbuffer","submitopts.clear");
x.t("msgbuffer","null");
x.t("msgbuffer","submitopts");
x.t("msgbuffer","reactorchannel.getbuffer");
x.t("compression","unrecoverable");
x.t("compression","savings");
x.t("compression","writeargs.uncompressedbyteswritten");
x.t("compression","information");
x.t("priorities","writepriorities");
x.t("priorities","including");
x.t("taking","account");
x.t("defines","return");
x.t("encodeiter.setbufferandrwfversion","msgbuffer");
x.t("messsages","send");
x.t("clear","clears");
x.t("nothing","left");
x.t(".l=1","new");
x.t("create","ua-55718642-4");
x.t("table","defines");
x.t("table","describes");
x.t("table","reactorsubmitoptions");
x.t("table","reactorrequestmsgoptions");
x.t("table","reactorchannel.submit");
x.t("describes","submit");
x.t("description","clear");
x.t("description","requestmsgoptions");
x.t("description","reactorreturncodes.success");
x.t("description","userspecobj");
x.t("description","submit");
x.t("requestmsgoptions","provides");
x.t("writeargs.priority","controls");
x.t("codecfactory.createencodeiterator","reactorsubmitoptions");
x.t("various","aspects");
x.t("writepriorities","low");
x.t("writepriorities","high");
x.t("writepriorities","medium");
x.t("reactorreturncodes.success","indicates");
x.t("reactorreturncodes.success","successful");
x.t("reactorreturncodes.success","break");
x.t("wwdd9001334","false");
x.t("performs","writing");
x.t("flag","values");
x.t("user","order");
x.t("user","content");
x.t("enabled","writeargs.priority");
x.t("enabled","class");
x.t("shows","typical");
x.t("provided","responses");
x.t("provided","message");
x.t("obtained","getbuffer");
x.t("open","streams");
x.t("responses","stream");
x.t("transportbuffer","example");
x.t("transportbuffer","method");
x.t("transportbuffer","msgbuffer");
x.t("transportbuffer","6.5.2.2");
x.t("transportbuffer","obtained");
x.t("transportbuffer","transportbuffer");
x.t("transportbuffer","function");
x.t("transportbuffer","calling");
x.t("transportbuffer","return");
x.t("transportbuffer","successfully");
x.t("transportbuffer","additional");
x.t("transportbuffer","application");
x.t("transportbuffer","call");
x.t("transportbuffer","reactorchannel.getbuffer");
x.t("transportbuffer","released");
x.t("fragmentation","compression");
x.t("fragmentation","process");
x.t("releasebuffer","following");
x.t("calls","channel.write");
x.t("time","priority");
x.t("left","return");
x.t("left","application");
x.t("trigger","channel.flush");
x.t("becoming","unavailable");
x.t("a=s.createelement","(o)");
x.t("unrecoverable","error");
x.t("userspecobj","user-defined");
x.t("new","date");
x.t("low","information");
x.t("items","options");
x.t("errorinfo","check");
x.t("errorinfo","break");
x.t("errorinfo","encodeiter.clear");
x.t("document","script");
x.t("includes","options");
x.t("savings","compression");
x.t("savings","table");
x.t("pageview","transport");
x.t("indicates","large");
x.t("indicates","submit");
x.t("indicates","general");
x.t("again","ret");
x.t("again","buffer");
x.t("proper","ordering");
x.t("encodeiterator","encodeiter");
x.t("need","release");
x.t("reactorreturncodes.write_call_again","indicates");
x.t("reactorreturncodes.write_call_again","large");
x.t("wwdd9001410","false");
x.t("6.5.2","writing");
x.t("api","provides");
x.t("api","reactor");
x.t("api","java");
x.t("guide","table");
x.t("guide","writeargs.flags");
x.t("guide","writeargs.byteswritten");
x.t("due","pool");
x.t("increase","number");
x.t("check","return");
x.t("false","method");
x.t("false","errorinfo");
x.t("false","webworks_writedivopen");
x.t("false","transport");
x.t("false","reactorsubmitoptions");
x.t("false","reactorrequestmsgoptions");
x.t("false","following");
x.t("large","message");
x.t("large","buffer");
x.t("become","available");
x.t("writing","message");
x.t("writing","data");
x.t("specified","via");
x.t("specified","msgkey");
x.t("specified","return");
x.t("via","request");
x.t("via","watchliststreaminfo");
x.t("via","reactorsubmitoptions");
x.t("converts","name");
x.t("high","writepriorities");
x.t("name","description");
x.t("name","used");
x.t("name","corresponding");
x.t("functionality","requesting");
x.t("functionality","using");
x.t("account","compression");
x.t("account","savings");
x.t("populated","method");
x.t("populated","user\u2019s");
x.t("channel.write","method");
x.t("codes","webworks_writearrow");
x.t("codes","webworks_writedivclose");
x.t("codes","occur");
x.t("closed","application");
x.t("couldn\u2019t","fully");
x.t("perform","fragmentation");
x.t("webworks_writedivopen","wwdd9001334");
x.t("webworks_writedivopen","wwdd9001410");
x.t("webworks_writedivopen","wwdd9001374");
x.t("webworks_writedivopen","wwdd9001392");
x.t("webworks_writedivopen","wwdd9001344");
x.t("webworks_writedivopen","wwdd9001383");
x.t("bytes","written");
x.t("requesting","items");
x.t("window","document");
x.t("parameters","specified");
x.t("parameters","associated");
x.t("provides","additional");
x.t("provides","following");
x.t("useful","object");
x.t("subsequently","pass");
x.t("developers","guide");
x.t("place","serviceid");
x.t("generic","message");
x.t("continue","fragmentation");
x.t("allows","several");
x.t("post","generic");
x.t("wwdd9001374","false");
x.t("reactorchannel.releasebuffer","msgbuffer");
x.t("reactorchannel.releasebuffer","table");
x.t("reactorchannel.releasebuffer","webworks_writedivclose");
x.t("reactorchannel.releasebuffer","reactorreturncodes.failure");
x.t("allow","application");
x.t("aspects","call");
x.t("write","priorities");
x.t("write","nothing");
x.t("write","failure");
x.t("(o)","m=s.getelementsbytagname");
x.t("(o)","[0]");
x.t("stream","via");
x.t("stream","object");
x.t("(ret)","case");
x.t("auto","send");
x.t("webworksrootpath","wwdd9001334");
x.t("webworksrootpath","wwdd9001410");
x.t("webworksrootpath","wwdd9001374");
x.t("webworksrootpath","wwdd9001392");
x.t("webworksrootpath","wwdd9001344");
x.t("webworksrootpath","wwdd9001383");
x.t("request","messsages");
x.t("request","messages");
x.t("error","occurs");
x.t("error","occurred");
x.t("supported","consumer");
x.t("writeargs.uncompressedbyteswritten","specified");
x.t("occurs","transportbuffer");
x.t("members","webworks_writedivclose");
x.t("options","available");
x.t("options","webworks_writearrow");
x.t("options","bypass");
x.t("messages","reactor");
x.t("control","various");
x.t("written","valid");
x.t("written","submit");
x.t("written","call");
x.t("written","including");
x.t("number","available");
x.t("number","bytes");
x.t("reactorchannel","closed");
x.t("6.5","writing");
x.t("function","[r]");
x.t("function","googleanalyticsobject");
x.t("serviceid","member");
x.t("recover","using");
x.t("clears","reactorsubmitoptions");
x.t("wwdd9001392","false");
x.t("encodeiter","msgbuffer");
x.t("encodeiter","codecfactory.createencodeiterator");
x.t("reactorchannel.majorversion","reactorchannel.minorversion");
x.t("may","place");
x.t("user-defined","object");
x.t("watchliststreaminfo","provided");
x.t("chapter","reactor");
x.t("reactor","reactorreturncodes.write_call_again");
x.t("reactor","converts");
x.t("reactor","recover");
x.t("reactor","detailed");
x.t("reactor","submit");
x.t("reactor","flush");
x.t("requests","servicename");
x.t("msgkey","msg");
x.t("scenario","available");
x.t("detailed","view");
x.t("transport","api");
x.t("transport","header");
x.t("webworks_writearrow","webworksrootpath");
x.t("properly","populated");
x.t("types","post");
x.t("succeeded","transportbuffer");
x.t("release","transportbuffer");
x.t("release","calling");
x.t("release","buffer");
x.t("ordering","fragment");
x.t("calling","reactorchannel.releasebuffer");
x.t("switch","(ret)");
x.t("code","example");
x.t("code","description");
x.t("code","switch");
x.t("submitopts.clear","ret");
x.t("expects","buffer");
x.t("return","reactorreturncodes.success");
x.t("return","codes");
x.t("return","number");
x.t("return","code");
x.t("return","values");
x.t("consumer","watchlist");
x.t("rsslreactorsubmitoptions","utility");
x.t("fully","written");
x.t("level","used");
x.t("successfully","passed");
x.t("message","couldn\u2019t");
x.t("message","reactor");
x.t("message","types");
x.t("message","event");
x.t("message","note");
x.t("option","supported");
x.t("header","overhead");
x.t("buffers","becoming");
x.t("buffers","become");
x.t("buffers","application");
x.t("buffers","pool");
x.t("java","developers");
x.t("java","edition");
x.t("event","table");
x.t("ensure","proper");
x.t("webworks_writedivclose","chapter");
x.t("webworks_writedivclose","reactor");
x.t("webworks_writedivclose","rsslreactorsubmitoptions");
x.t("webworks_writedivclose","reactorrequestmsgoptions");
x.t("webworks_writedivclose","reactorchannel.getbuffer");
x.t("webworks_writedivclose","reactorchannel.submit");
x.t("wwdd9001344","false");
x.t("msg","used");
x.t("occurred","need");
x.t("occurred","reactorchannel");
x.t("null","encodeiterator");
x.t("1024","false");
x.t("flushing","user");
x.t("fragment","continue");
x.t("failure","occurred");
x.t("additional","time");
x.t("additional","functionality");
x.t("additional","parameters");
x.t("encodemsgintobuffer","encodeiter");
x.t("send","pageview");
x.t("send","requests");
x.t("several","modifications");
x.t("bypass","queuing");
x.t("specific","flag");
x.t("free","buffers");
x.t("submitopts","errorinfo");
x.t("submitopts","reactorfactory.createreactorsubmitoptions");
x.t("(arguments)","[r]");
x.t("watchlist","enabled");
x.t("process","left");
x.t("ret","reactorchannel.submit");
x.t("view","6.5");
x.t("m=s.getelementsbytagname","(o)");
x.t("[0]","a.async=1");
x.t("manages","queuing");
x.t("valid","priorities");
x.t("script","//www.google-analytics.com/analytics.js");
x.t("6.5.2.2.2","return");
x.t("channel.flush","method");
x.t("medium","writepriorities");
x.t("data","method");
x.t("data","6.5.2");
x.t("data","written");
x.t("data","using");
x.t("data","buffer");
x.t(".push","(arguments)");
x.t("ua-55718642-4","auto");
x.t("information","write");
x.t("information","specific");
x.t("overhead","taking");
x.t("typical","reactorchannel.getbuffer");
x.t("defined","6.5.2.2.2");
x.t("submit","performs");
x.t("submit","transportbuffer");
x.t("submit","again");
x.t("submit","options");
x.t("values","available");
x.t("values","allow");
x.t("values","described");
x.t("6.5.2.2.5","method");
x.t("application","subsequently");
x.t("application","control");
x.t("application","may");
x.t("application","release");
x.t("application","optionally");
x.t("application","modify");
x.t("utility","method");
x.t("reuse","table");
x.t("unavailable","reactor");
x.t("reactorreturncodes.failure","indicates");
x.t("reactorreturncodes.failure","error");
x.t("case","reactorreturncodes.success");
x.t("case","reactorreturncodes.write_call_again");
x.t("case","reactorreturncodes.failure");
x.t("successful","write");
x.t("modifications","additional");
x.t("described","transport");
x.t("described","6.5.2.2.5");
x.t("date","a=s.createelement");
x.t("//www.google-analytics.com/analytics.js","create");
x.t("queuing","compression");
x.t("queuing","flushing");
x.t("note","option");
x.t("priority","level");
x.t("priority","data");
x.t("flush","user");
x.t("reactorchannel.ioctl","increase");
x.t("writeargs.flags","flag");
x.t("typically","due");
x.t("optionally","reactorchannel.ioctl");
x.t("edition","writing");
x.t("reactorsubmitoptions","method");
x.t("reactorsubmitoptions","allow");
x.t("reactorsubmitoptions","submitopts");
x.t("reactorsubmitoptions","utility");
x.t("reactorsubmitoptions","class");
x.t("reactorsubmitoptions","object");
x.t("call","includes");
x.t("call","submit");
x.t("call","typically");
x.t("call","pass");
x.t("call","reactorchannel.submit");
x.t("controls","priority");
x.t("reactorrequestmsgoptions","provide");
x.t("reactorrequestmsgoptions","webworks_writearrow");
x.t("reactorrequestmsgoptions","class");
x.t("order","free");
x.t(".q=i","[r]");
x.t("following","example");
x.t("following","table");
x.t("following","utility");
x.t("used","open");
x.t("used","message");
x.t("used","ensure");
x.t("used","call");
x.t("service","name");
x.t("corresponding","writing");
x.t("reactorchannel.getbuffer","reactorchannel.releasebuffer");
x.t("reactorchannel.getbuffer","1024");
x.t("reactorchannel.getbuffer","reactorchannel.submit");
x.t("break","code");
x.t("break","case");
x.t("using","releasebuffer");
x.t("using","request");
x.t("using","service");
x.t("using","reactorchannel.submit");
x.t("[r]",".l=1");
x.t("[r]","function");
x.t("[r]",".push");
x.t("[r]",".q=i");
x.t("[r]","[r]");
x.t("getbuffer","populated");
x.t("class","members");
x.t("class","member");
x.t("writeargs.byteswritten","specified");
x.t("general","write");
x.t("reactorfactory.createreactorsubmitoptions","msgbuffer");
x.t("a.async=1","a.src=g");
x.t("pass","submit");
x.t("pass","buffer");
x.t("encodeiter.clear","encodeiter.setbufferandrwfversion");
x.t("googleanalyticsobject","[r]");
x.t("associated","stream");
x.t("associated","reactorchannel.submit");
x.t("member","description");
x.t("member","specified");
x.t("modify","behavior");
x.t("behavior","reactorchannel.submit");
x.t("occur","using");
x.t("released","transport");
x.t("released","pool");
x.t("including","example");
x.t("including","transport");
x.t("buffer","passed");
x.t("buffer","reactorchannel.releasebuffer");
x.t("buffer","properly");
x.t("buffer","fully");
x.t("buffer","submit");
x.t("buffer","used");
x.t("pool","buffers");
x.t("pool","using");
x.t("servicename","application");
x.t("wwdd9001383","false");
x.t("reactorchannel.minorversion","encodemsgintobuffer");
x.t("reactorchannel.submit","msgbuffer");
x.t("reactorchannel.submit","transportbuffer");
x.t("reactorchannel.submit","call");
x.t("reactorchannel.submit","class");
x.t("a.src=g","m.parentnode.insertbefore");
x.t("user\u2019s","data");
x.t("content","perform");
x.t("object","provided");
x.t("object","useful");
x.t("object","defined");
x.t("object","reuse");
x.t("object","associated");
x.t("streams","via");
}
